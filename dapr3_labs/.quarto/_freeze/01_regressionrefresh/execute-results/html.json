{
  "hash": "7cb0485fbb59306660906bddd6c3436a",
  "result": {
    "markdown": "---\ntitle: \"Regression Refresh and Clustered Data\"\nlink-citations: yes\nparams: \n    SHOW_SOLS: TRUE\n    TOGGLE: TRUE\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n:::lo\n**Preliminaries**  \n \n1. Open Rstudio, and **create a new project for this course!!** \n2. Create a new RMarkdown document or R script (whichever you like) for this week. \n\nThese are the main packages we're going to use in this block. It might make sense to install them now if you do not have them already.  \n<!-- (note, the rstudio.ppls.ed.ac.uk server already has `lme4` and `tidyverse` installed for you).   -->\n\n+ __tidyverse__ : for organising data  \n+ __ICC__ : for quickly calculating intraclass correlation coefficient\n+ __lme4__ : for fitting generalised linear mixed effects models\n+ __lmeresampler__ : for bootstrapping!\n+ __effects__ : for tabulating and graphing effects in linear models\n+ __broom.mixed__ : tidying methods for mixed models\n+ __sjPlot__ : for plotting models\n+ __HLMdiag__ : for examining case diagnostics at multiple levels\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninstall.packages(c(\"tidyverse\",\"ICC\",\"lme4\",\"effects\",\"broom.mixed\",\"sjPlot\",\"HLMdiag\"))\n# the lmeresampler package has had some recent updates. better to install the most recent version:\ninstall.packages(\"devtools\")\ndevtools::install_github(\"aloy/lmeresampler\")\n```\n:::\n\n\n:::\n\n\n\n\n\n# Linear Model Refresh\n\n\n:::frame\n__Data: Wellbeing in Scotland__  \n\nIn DAPR2, one of the examples we used in [learning about linear regression](https://uoepsy.github.io/dapr2/2122/labs/1_04_mlr.html) was in examining the relationship between time spent outdoors and mental wellbeing. In that example researchers had collected data from 32 residents of Edinburgh & Lothians.  \n\nResearchers want to study this relationship across all of Scotland. They contact all the Local Authority Areas (LAAs) and ask them to collect data for them for them, with participants completing the Warwick-Edinburgh Mental Wellbeing Scale (WEMWBS), a self-report measure of mental health and well-being, and being asked to estimate the average number of hours they spend outdoors each week.  \n\nTwenty of the Local Authority Areas provided data. It is available at [https://uoepsy.github.io/data/LAAwellbeing.csv](https://uoepsy.github.io/data/LAAwellbeing.csv), and you can read it into your R environment using the code below: \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscotmw <- read_csv(\"https://uoepsy.github.io/data/LAAwellbeing.csv\")\n```\n:::\n\nThe dataset contains information on 132 participants. You can see the variables in the table below\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"ssotrfyesn\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#ssotrfyesn .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ssotrfyesn .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ssotrfyesn .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ssotrfyesn .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ssotrfyesn .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ssotrfyesn .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ssotrfyesn .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ssotrfyesn .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ssotrfyesn .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ssotrfyesn .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ssotrfyesn .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ssotrfyesn .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ssotrfyesn .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ssotrfyesn .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ssotrfyesn .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ssotrfyesn .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ssotrfyesn .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ssotrfyesn .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ssotrfyesn .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ssotrfyesn .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ssotrfyesn .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ssotrfyesn .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ssotrfyesn .gt_left {\n  text-align: left;\n}\n\n#ssotrfyesn .gt_center {\n  text-align: center;\n}\n\n#ssotrfyesn .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ssotrfyesn .gt_font_normal {\n  font-weight: normal;\n}\n\n#ssotrfyesn .gt_font_bold {\n  font-weight: bold;\n}\n\n#ssotrfyesn .gt_font_italic {\n  font-style: italic;\n}\n\n#ssotrfyesn .gt_super {\n  font-size: 65%;\n}\n\n#ssotrfyesn .gt_two_val_uncert {\n  display: inline-block;\n  line-height: 1em;\n  text-align: right;\n  font-size: 60%;\n  vertical-align: -0.25em;\n  margin-left: 0.1em;\n}\n\n#ssotrfyesn .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#ssotrfyesn .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ssotrfyesn .gt_slash_mark {\n  font-size: 0.7em;\n  line-height: 0.7em;\n  vertical-align: 0.15em;\n}\n\n#ssotrfyesn .gt_fraction_numerator {\n  font-size: 0.6em;\n  line-height: 0.6em;\n  vertical-align: 0.45em;\n}\n\n#ssotrfyesn .gt_fraction_denominator {\n  font-size: 0.6em;\n  line-height: 0.6em;\n  vertical-align: -0.05em;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\">variable</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\">description</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_left\">ppt</td>\n<td class=\"gt_row gt_left\">Participant ID</td></tr>\n    <tr><td class=\"gt_row gt_left\">name</td>\n<td class=\"gt_row gt_left\">Participant Name</td></tr>\n    <tr><td class=\"gt_row gt_left\">laa</td>\n<td class=\"gt_row gt_left\">Local Authority Area</td></tr>\n    <tr><td class=\"gt_row gt_left\">outdoor_time</td>\n<td class=\"gt_row gt_left\">Self report estimated number of hours per week spent outdoors</td></tr>\n    <tr><td class=\"gt_row gt_left\">wellbeing</td>\n<td class=\"gt_row gt_left\">Warwick-Edinburgh Mental Wellbeing Scale (WEMWBS), a self-report measure of mental health and well-being. The scale is scored by summing responses to each item, with items answered on a 1 to 5 Likert scale. The minimum scale score is 14 and the maximum is 70.</td></tr>\n    <tr><td class=\"gt_row gt_left\">density</td>\n<td class=\"gt_row gt_left\">LAA Population Density (people per square km)</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n:::\n\n\n:::sticky\n__Regression Refresh__\n\nRecall that in the DAPR2 course last year we learned all about the linear regression model, which took the form:\n\n\n$$\n\\begin{align}\\\\\n& \\text{for observation }i \\\\\n& \\color{red}{Y_i}\\color{black} = \\color{blue}{\\beta_0 \\cdot{} 1 + \\beta_1 \\cdot{} X_{1i} \\ + \\ ... \\ + \\ \\beta_p \\cdot{} X_{pi}}\\color{black} + \\varepsilon_i \\\\ \n\\end{align}\n$$\n\n\nAnd if we wanted to write this more simply, we can express $X_1$ to $X_p$ as an $n \\times p$ matrix (samplesize $\\times$ parameters), and $\\beta_0$ to $\\beta_p$ as a vector of coefficients:\n\n\n$$\n\\begin{align}\n& \\color{red}{\\mathbf{y}}\\color{black} = \\color{blue}{\\boldsymbol{X\\beta}}\\color{black} + \\boldsymbol{\\varepsilon} \\\\\n& \\quad \\\\\n& \\text{where} \\\\\n& \\varepsilon \\sim N(0, \\sigma) \\text{ independently} \\\\\n\\end{align}\n$$\n\nIn R, we fitted these models using:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(y ~ x1 + x2 + .... xp, data = mydata)  \n```\n:::\n\n\n:::\n\n\n\n\n<div class='question-begin'>Question 1</div><div class='question-body'>\n\n\nRead in the Local Authority data from [https://uoepsy.github.io/data/LAAwellbeing.csv](https://uoepsy.github.io/data/LAAwellbeing.csv) and plot the bivariate relationship between wellbeing and time spent outdoors.   \n\nUsing `lm()`, fit the simple linear model:  \n\n\n$$\n\\text{Wellbeing}_i = \\beta_0 + \\beta_1 \\cdot \\text{Hours per week spent outdoors}_i + \\varepsilon_i\n$$\n\n\nThink about the assumptions we make about this model:\n\n\n$$\n\\text{where} \\quad \\varepsilon_i \\sim N(0, \\sigma) \\text{ independently}\n$$\n\nHave we satisfied this assumption (specifically, the assumption of *independence* of errors)? \n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n\n<div class=\"solution-begin\"><span id='sol-start-1' class=\"fa fa-hand-o-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-1', 'sol-start-1')\">  Solution </span></div><div class=\"solution-body\" id = \"sol-body-1\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscotmw <- read_csv(\"https://uoepsy.github.io/data/LAAwellbeing.csv\") \n\nggplot(data = scotmw, aes(x = outdoor_time, y = wellbeing))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](01_regressionrefresh_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsimplemod <- lm(wellbeing ~ outdoor_time, data = scotmw)\nsummary(simplemod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = wellbeing ~ outdoor_time, data = scotmw)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-28.7089  -7.3501   0.0758   6.6307  25.4873 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   39.6086     2.6414  14.995   <2e-16 ***\noutdoor_time   0.1962     0.1449   1.354    0.178    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.51 on 130 degrees of freedom\nMultiple R-squared:  0.0139,\tAdjusted R-squared:  0.006313 \nF-statistic: 1.832 on 1 and 130 DF,  p-value: 0.1782\n```\n:::\n:::\n\n\nOur model from the previous question will assume that the residuals for all participants are independent of one another. But is this a reasonable assumption that we can make? Might we not think that the residents of the highlands might have generally higher levels of wellbeing than those living in Glasgow? Additionally, the association between outdoor time and wellbeing might be different depending on where you live?  \n\nThe natural grouping of the people into their respective geographic area introduces a level of *dependence* which we would be best to account for.  \n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 2</div><div class='question-body'>\n\n\nTry running the code below.  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = scotmw, aes(x = outdoor_time, y = wellbeing))+\n  geom_point()+\n  geom_smooth(method=\"lm\",se=FALSE)\n```\n:::\n\nThen try editing the code to include an aesthetic mapping from the LAA to the color in the plot.  \n\nHow do your thoughts about the relationship between outdoor time and wellbeing change?\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><span id='sol-start-2' class=\"fa fa-hand-o-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-2', 'sol-start-2')\">  Solution </span></div><div class=\"solution-body\" id = \"sol-body-2\" style=\"display: none;\">\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = scotmw, aes(x = outdoor_time, y = wellbeing))+\n  geom_point()+\n  geom_smooth(method=\"lm\",se=FALSE)\n```\n\n::: {.cell-output-display}\n![](01_regressionrefresh_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = scotmw, aes(x = outdoor_time, y = wellbeing, col = laa))+\n  geom_point()+\n  geom_smooth(method=\"lm\",se=FALSE)\n```\n\n::: {.cell-output-display}\n![](01_regressionrefresh_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=80%}\n:::\n:::\n\n  \nFrom the second plot, we see a lot of the LAA appear to have a positive relationship (outdoor time is associated with higher wellbeing). There seem to be differences between LAAs in both the general wellbeing level (residents of Na h-Eileanan Siar  - the outer hebrides - have high wellbeing), and in how outdoor time is associated with wellbeing (for instance, outdoor time doesn't seem to help in Glasgow City).  \n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n# Complete pooling, No pooling\n\n:::frame\n**Complete Pooling**  \n\nWe can consider the simple regression model (`lm(wellbeing ~ outdoor_time, data = scotmw)`) to \"pool\" the information from all observations together. In this 'Complete Pooling' approach, we simply ignore the natural clustering of the people into their local authority areas, as if we were unaware of it. The problem is that this assumes the same regression line for all local authority areas, which might not be that appropriate. Additionally, we violate the assumption that our residuals are independent, because all of the residuals from certain groups will be more like one another than they are to the others.  \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Complete pooling can lead to bad fit for certain groups](01_regressionrefresh_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=350px}\n:::\n:::\n\n\n:::\n\n:::frame  \n**No Pooling**  \n\nThere are various ways we could attempt to deal with the problem that our data are in groups (or \"clusters\"). With the tools you have learned in DAPR2, you may be tempted to try including LAA in the model as another predictor, to allow for some local authority areas being generally better than others:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(wellbeing ~ outdoor_time + laa, data = scotmw)\n```\n:::\n\nOr even to include an interaction to allow for local authority areas to show different patterns of association between outdoor time and wellbeing:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(wellbeing ~ outdoor_time * laa, data = scotmw)\n```\n:::\n\n\nThis approach gets termed the \"No Pooling\" method, because the information from each cluster contributes *only* to an estimated parameter for that cluster, and there is no pooling of information across clusters. This is a good start, but it means that a) we are estimating *a lot* of parameters, and b) we are not necessarily estimating the parameter of interest (the *overall* effect of practice on reading age). Furthermore, we'll probably end up having high variance in the estimates at each group.  \n\n:::\n\n\n\n<div class='question-begin'>Question 3</div><div class='question-body'>\n\n\nFit a linear model which accounts for the grouping of participants into their different local authorities, but holds the association between outdoor time and wellbeing as constant across LAAs:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod1 <- lm(wellbeing ~ outdoor_time + laa, data = scotmw)\n```\n:::\n\n\nCan you construct a plot of the **fitted** values from this model, coloured by LAA?  \n(Hint: you might want to use the `augment()` function from the **broom** package)\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><span id='sol-start-3' class=\"fa fa-hand-o-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-3', 'sol-start-3')\">  Solution </span></div><div class=\"solution-body\" id = \"sol-body-3\" style=\"display: none;\">\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(broom)\naugment(mod1) %>%\n  ggplot(.,aes(x=outdoor_time, y=.fitted, col=laa))+\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](01_regressionrefresh_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 4</div><div class='question-body'>\n\n\nWhat happens (to the plot, and to your parameter estimates) when you include the interaction between `laa` and `outdoor_time`?\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><span id='sol-start-4' class=\"fa fa-hand-o-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-4', 'sol-start-4')\">  Solution </span></div><div class=\"solution-body\" id = \"sol-body-4\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod2 <- lm(wellbeing ~ outdoor_time * laa, data = scotmw)\n\nbroom::augment(mod2) %>%\n  ggplot(.,aes(x=outdoor_time, y=.fitted, col=laa))+\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](01_regressionrefresh_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=80%}\n:::\n:::\n\nWe can see now that our model is fitting a different relationship between wellbeing and outdoor time for each LAA. This is good - we're going to get better estimates for different LAAs (e.g. wellbeing of residents of the Highlands increases with more outdoor time, and wellbeing of residents of Glasgow does not).  \n\nWe can see that this model provides a better fit - it results in a significant reduction in the residual sums of squares:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nanova(mod1, mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nModel 1: wellbeing ~ outdoor_time + laa\nModel 2: wellbeing ~ outdoor_time * laa\n  Res.Df    RSS Df Sum of Sq      F  Pr(>F)  \n1    111 2726.2                              \n2     92 1973.8 19    752.36 1.8456 0.02866 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nBut accounting for this heterogeneity over clusters in the effect of interest comes at the expense of not pooling information across groups to get one estimate for \"**the** association between outdoor time and wellbeing\". Additionally, these models will tend to have low statistical power because they are using fewer observations (only those within each cluster) to estimate parameters which only represent within-cluster effects.  \n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n# Some Data Wrangling\n\nWith more complex data structures comes more in-depth data wrangling in order to get it ready for fitting and estimating our model. Typically, the data we get will not be neat and tidy, and will come in different formats. Often we simply get whatever our experiment/questionnaire software spits out, and we have to work from there. When you are designing a study, you can do work on the front end to minimise the data-wrangling. Try to design an experiment/questionnaire while keeping in mind what the data comes out looking like.  \n\nBelow we have some data from a fake experiment. We've tried to make it a bit more difficult to work with - a bit more similar to what we would _actually_ get when doing real-life research.   \n\n:::frame\n**Data: Raising the stakes**\n\nThis data is from a simulated study that aims to investigate how levels of stress are influenced by the size and type of potential rewards. \n\n30 volunteers from an amateur basketball league participated. Each participant completed 20 trials in which they were tasked with throwing a basketball and scoring a goal in order to score points. The number of points up for grabs varied between trials, ranging from 1 to 20 points, with the order randomised for each participant. If a participant successfully threw the ball in the basket, then their score increased accordingly. If they missed, their score decreased accordingly. Participants were informed of the number of points available prior to each throw.  \n\nTo examine the influence of the *type* of reward/loss on stress-levels, the study consisted of two conditions. In the monetary condition, (n = 15) participants were informed at the start of the study that they would receive their final score in £ at the end of the study. In the reputation condition, (n = 15) participants were informed that the points would be inputted on to a scoreboard and distributed around the local basketball clubs and in the league newsletter. \n\nThroughout each trial, participants' heart rate variability (HRV) was measured via a chest strap. HRV is considered to be indirectly related to levels of stress (i.e., higher HRV = less stress).\n\nThe data is in stored in two separate files.  \n\n1. Information on the conditions for each trial for each participant is stored in __.csv__ format at [https://uoepsy.github.io/data/basketballconditions.csv](https://uoepsy.github.io/data/basketballconditions.csv).  \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n|variable  |description                                                                                     |\n|:---------|:-----------------------------------------------------------------------------------------------|\n|stakes    |Number of points available to be won/lost based on successful completion of     trial           |\n|condition |Whether the final score will be converted to £ or will be placed on a public       leader-board |\n|sub       |Participant Identifier                                                                          |\n|throw     |Whether the participant successfully threw the ball in the   basket                             |\n|trial_no  |Trial number (1 to 20                                                                           |\n:::\n:::\n\n2. Information on participants' HRV for each trial is stored in **.xlsx** format, and can be downloaded from [https://uoepsy.github.io/data/basketballhrv.xlsx](https://uoepsy.github.io/data/basketballhrv.xlsx). \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n|variable |description                  |\n|:--------|:----------------------------|\n|sub      |Subject Identifier           |\n|trial_1  |HRV average during trial 1   |\n|trial_2  |HRV average during trial 2   |\n|trial_3  |HRV average during trial 3   |\n|...      |HRV average during trial ... |\n:::\n:::\n\n\n\n:::\n\n\n\n<div class='question-begin'>Question 5</div><div class='question-body'>\n\n\nGet the data into your R session. \n\n__Note:__ For one of the files, this is a bit different to how we have given you data in previous exercises. You may remember that for a __.csv__ file, you can read directly into R from the link using, `read_csv(\"https://uoepsy.......)`.  \n\nHowever, in reality you are likely to be confronted with data in all sorts of weird formats, such as __.xlsx__ files from MS Excel. Have a look around the internet to try and find any packages/functions/techniques for getting both the datasets in to R. \n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><span id='sol-start-5' class=\"fa fa-hand-o-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-5', 'sol-start-5')\">  Solution </span></div><div class=\"solution-body\" id = \"sol-body-5\" style=\"display: none;\">\n\n\n:::imp\nUnfortunately, a few students are getting error messages which we could not solve when trying to read in the .xlsx data. The same data is available at https://uoepsy.github.io/data/bballhrv.csv so that you can read it in in the normal way. \n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbball <- read_csv(\"https://uoepsy.github.io/data/basketballconditions.csv\")\nhead(bball)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  stakes condition   sub throw trial_no\n   <dbl> <chr>     <dbl> <dbl> <chr>   \n1     13 money         1     1 trial_1 \n2     17 money         1     1 trial_2 \n3      7 money         1     1 trial_3 \n4      1 money         1     1 trial_4 \n5      2 money         1     1 trial_5 \n6      8 money         1     1 trial_6 \n```\n:::\n:::\n\n\nFor the __.xlsx__ data:\n\n- Step 1: download the data to your computer  \n- Step 2: load the __readxl__ package.  \n- Step 3: use the `read_xlsx()` function to read in the data, pointing it to the relevant place on your computer. \n\nYou can actually do all these steps from within R.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Step 1\ndownload.file(url = \"https://uoepsy.github.io/data/basketballhrv.xlsx\", \n              destfile = \"baskeballhrvdata.xlsx\")\n# Step 2\nlibrary(readxl)\n# Step 3\nbballhrv <- read_xlsx(\"baskeballhrvdata.xlsx\")\nhead(bballhrv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 21\n    sub trial_1 trial_2 trial_3 trial_4 trial_5 trial_6 trial_7 trial_8 trial_9\n  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1     1    5.47    6.69    2.72    4.95    5.96    4.93    4.62    4.70    5.78\n2     2    4.60    6.46    3.77    4.80    6.33    5.15    5.04    5.70    4.66\n3     3    5.14    5.98    4.30    4.40    4.97    5.16    4.71    4.60    5.94\n4     4    5.85    3.74    3.40    4.97    6.46    3.87    5.14    6.26    3.60\n5     5    7.46    5.83    4.83    6.26    3.52    5.92    4.24    4.39    5.75\n6     6    3.53    2.89    2.07    2.20    3.92    4.45    3.19    5.20    3.81\n# … with 11 more variables: trial_10 <dbl>, trial_11 <dbl>, trial_12 <dbl>,\n#   trial_13 <dbl>, trial_14 <dbl>, trial_15 <dbl>, trial_16 <dbl>,\n#   trial_17 <dbl>, trial_18 <dbl>, trial_19 <dbl>, trial_20 <dbl>\n```\n:::\n:::\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 6</div><div class='question-body'>\n\n\nIs each dataset in wide or long format? We want them both in long format, so try to reshape either/both if necessary.\n\nHint - in the tidyverse functions, you can specify all columns between column **x** and column **z** by using the colon, `x:z`.  \n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><span id='sol-start-6' class=\"fa fa-hand-o-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-6', 'sol-start-6')\">  Solution </span></div><div class=\"solution-body\" id = \"sol-body-6\" style=\"display: none;\">\n\n\nOnly the HRV data is in wide format:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhead(bballhrv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 21\n    sub trial_1 trial_2 trial_3 trial_4 trial_5 trial_6 trial_7 trial_8 trial_9\n  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1     1    5.47    6.69    2.72    4.95    5.96    4.93    4.62    4.70    5.78\n2     2    4.60    6.46    3.77    4.80    6.33    5.15    5.04    5.70    4.66\n3     3    5.14    5.98    4.30    4.40    4.97    5.16    4.71    4.60    5.94\n4     4    5.85    3.74    3.40    4.97    6.46    3.87    5.14    6.26    3.60\n5     5    7.46    5.83    4.83    6.26    3.52    5.92    4.24    4.39    5.75\n6     6    3.53    2.89    2.07    2.20    3.92    4.45    3.19    5.20    3.81\n# … with 11 more variables: trial_10 <dbl>, trial_11 <dbl>, trial_12 <dbl>,\n#   trial_13 <dbl>, trial_14 <dbl>, trial_15 <dbl>, trial_16 <dbl>,\n#   trial_17 <dbl>, trial_18 <dbl>, trial_19 <dbl>, trial_20 <dbl>\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbballhrv <-\n  bballhrv %>%\n  pivot_longer(trial_1:trial_20, names_to = \"trial_no\", values_to = \"hrv\")\n\nhead(bballhrv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n    sub trial_no   hrv\n  <dbl> <chr>    <dbl>\n1     1 trial_1   5.47\n2     1 trial_2   6.69\n3     1 trial_3   2.72\n4     1 trial_4   4.95\n5     1 trial_5   5.96\n6     1 trial_6   4.93\n```\n:::\n:::\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n:::rtip\n**Pivot!**    \n\nOne of the more confusing things to get to grips with is the idea of reshaping a dataframe.  \nFor different reasons, you might sometimes want to have data in wide, or in long format. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Source: https://fromthebottomoftheheap.net/2019/10/25/pivoting-tidily/](https://www.fromthebottomoftheheap.net/assets/img/posts/tidyr-longer-wider.gif){fig-align='center' width=80%}\n:::\n:::\n\n\nWhen the data is wide, we can make it long using `pivot_longer()`. When we make data longer, we're essentially making lots of columns into 2 longer columns. Above, in the animation, the wide variable **x**, **y** and **z** go into a new longer column called **name** that specifies which (x/y/z) it came from, and the values get put into the **val** column.  \n\nThe animation takes a shortcut in the code it displays above, but you could also use `pivot_longer(c(x,y,z), names_to = \"name\", values_to = \"val\")`. To reverse this, and put it back to being wide, we tell R which columns to take the names and values *from*: `pivot_wider(names_from = name, values_from = val)`.  \n:::\n\nNow comes a fun bit. \nYou may have noticed that we have two datasets for this study. If we are interested in relationships between the heart rate variability (HRV) of participants during each trial, as well as the experimental manipulations (i.e., the condition of each trial), these are currently in different datasets.  \nSolution: we need to join them together!  \n\nProvided that both data-sets contain information on participant number and trial number, which uniquely identify each observation, we can join them together matching on those variables!  \n\n\n\n<div class='question-begin'>Question 7</div><div class='question-body'>\n\n\nJoin the two datasets (both in long format) together. \n\nNote that the variables we are matching on need to have the information in the same format. For instance, R won't be able to match `\"trial_1\",\"trial_2\",\"trial_3\"` with `1, 2, 3` because they are different things. We would need to edit one of them to be in the same format.  \n\n**Hint:** You should end up with 600 rows.  \n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><span id='sol-start-7' class=\"fa fa-hand-o-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-7', 'sol-start-7')\">  Solution </span></div><div class=\"solution-body\" id = \"sol-body-7\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbball <- full_join(bball, bballhrv)\nhead(bball)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  stakes condition   sub throw trial_no   hrv\n   <dbl> <chr>     <dbl> <dbl> <chr>    <dbl>\n1     13 money         1     1 trial_1   5.47\n2     17 money         1     1 trial_2   6.69\n3      7 money         1     1 trial_3   2.72\n4      1 money         1     1 trial_4   4.95\n5      2 money         1     1 trial_5   5.96\n6      8 money         1     1 trial_6   4.93\n```\n:::\n:::\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n:::rtip\n__Joining data__\n\nThere are lots of different ways to join data-sets, depending on whether we want to keep rows from one data-set or the other, or keep only those in both data-sets etc. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Check out the help documentation for them all using `?full_join`.](images/messy/joins.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n# Exploring Clustering\n\n\n\n<div class='question-begin'>Question 8</div><div class='question-body'>\n\n\nContinuing with our basketball/hrv study, consider the following questions:  \n  \nWhat are the units of observations?  \nWhat are the groups/clusters?  \nWhat varies *within* these clusters?  \nWhat varies *between* these clusters?  \n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><span id='sol-start-8' class=\"fa fa-hand-o-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-8', 'sol-start-8')\">  Solution </span></div><div class=\"solution-body\" id = \"sol-body-8\" style=\"display: none;\">\n\n\n\nWhat are the units of observations? __trials__  \nWhat are the groups/clusters? __participants__\nWhat varies *within* these clusters? __size of reward__    \nWhat varies *between* these clusters? __type of reward__  \n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 9</div><div class='question-body'>\n\n\nCalculate the ICC, using the `ICCbare()` function from the **ICC** package.  \n\nRemember, you can look up the help for a function by typing a `?` followed by the function name in the console. \n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><span id='sol-start-9' class=\"fa fa-hand-o-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-9', 'sol-start-9')\">  Solution </span></div><div class=\"solution-body\" id = \"sol-body-9\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ICC)\nICCbare(x = sub, y = hrv, data = bball)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3141482\n```\n:::\n:::\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n:::statbox\n\n**Understanding ICC a bit better**  \n  \nThink about what ICC represents - the ratio of the variance between the groups to the total variance.  \nYou can think of the \"variance between the groups\" as the group means varying around the overall mean (the black dots around the black line), and the total variance as that plus the addition of the variance of the individual observations around each group mean (each set of coloured points around their respective larger black dot):\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(bball, aes(x=sub, y=hrv))+\n  geom_point(aes(col=sub),alpha=.3)+\n  stat_summary(geom = \"pointrange\")+\n  geom_hline(yintercept = mean(bball$hrv))+\n  guides(col=FALSE)\n```\n\n::: {.cell-output-display}\n![](01_regressionrefresh_files/figure-html/unnamed-chunk-28-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\nYou can also think of the ICC as the correlation between two randomly drawn observations from the same group. \nThis is a bit of a tricky thing to get your head round if you try to relate it to the type of \"correlation\" that you are familiar with. Pearson's correlation (e.g think about a typical scatterplot) operates on *pairs of observations* (a set of values on the x-axis and their corresponding values on the y-axis), whereas ICC operates on *data which is structured in groups*.  \n  \n\n\n<div class=\"optional-begin\"><span id='opt-start-10' class=\"fa fa-hand-o-right optional-icon clickable\" onclick=\"toggle_visibility('opt-body-10', 'opt-start-10')\"> <span class=\"olab\">Optional - ICC as the expected correlation between two observations from same group</span></span></div><div class=\"optional-body\" id = \"opt-body-10\" style=\"display: none;\">\n\n\n\nLet's suppose we had only 2 observations in each group.  \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n  cluster observation   y\n1 group_1           1   4\n2 group_1           2   2\n3 group_2           1   4\n4 group_2           2   2\n5 group_3           1   7\n6 group_3           2   5\n7     ...         ... ...\n```\n:::\n:::\n\n\n\nThe ICC for this data is 0.18:\n\nNow suppose we *reshape* our data so that we have one row per group, and one column for each observation to look like this:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 3\n  cluster obs1  obs2 \n  <chr>   <chr> <chr>\n1 group_1 4     2    \n2 group_2 4     2    \n3 group_3 7     5    \n4 group_4 2     7    \n5 group_5 3     8    \n6 group_6 6     7    \n7 ...     ...   ...  \n```\n:::\n:::\n\nCalculating Pearson's correlation on those two columns yields 0.2, which isn't quite right. It's close, but not quite.. \n\n:::imp \nThe crucial thing here is that it is completely arbitrary which observations get called \"obs1\" and which get called \"obs2\".  \nThe data aren't paired, but __grouped.__ \n:::\n\nEssentially, there are lots of different combinations of \"pairs\" here. \nThere are the ones we have shown above:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 3\n  cluster obs1  obs2 \n  <chr>   <chr> <chr>\n1 group_1 4     2    \n2 group_2 4     2    \n3 group_3 7     5    \n4 group_4 2     7    \n5 group_5 3     8    \n6 group_6 6     7    \n7 ...     ...   ...  \n```\n:::\n:::\n\nBut we might have equally chosen these:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 3\n  cluster obs1  obs2 \n  <chr>   <chr> <chr>\n1 group_1 2     4    \n2 group_2 2     4    \n3 group_3 5     7    \n4 group_4 7     2    \n5 group_5 3     8    \n6 group_6 6     7    \n7 ...     ...   ...  \n```\n:::\n:::\n\nor these:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 3\n  cluster obs1  obs2 \n  <chr>   <chr> <chr>\n1 group_1 2     4    \n2 group_2 4     2    \n3 group_3 7     5    \n4 group_4 2     7    \n5 group_5 3     8    \n6 group_6 6     7    \n7 ...     ...   ...  \n```\n:::\n:::\n\n\nIf we take the correlation of all these combinations of pairings, then we get our ICC of 0.18!\n\n__ICC = the expected correlation of a *randomly drawn pair* of observations from the same group.__\n\n<!-- We could even do this via simulation, and write our own customised function! -->\n<!-- The code below creates a function for us to use. Can you figure out how it works?  -->\n<!-- ```{r} -->\n<!-- get_random_pair <- function(){ -->\n<!--   my_sub = sample(unique(bball$sub), 1) -->\n<!--   my_obs = sample(bball$hrv[bball$sub == my_sub], size=2) -->\n<!--   my_obs -->\n<!-- } -->\n<!-- ``` -->\n<!-- Try it out, by running it several times.  -->\n<!-- ```{r} -->\n<!-- get_random_pair() -->\n<!-- ``` -->\n\n<!-- Now let's make our computer do it loads and loads of times: -->\n<!-- ```{r} -->\n<!-- # replicate is a way of making R execute the same code repeatedly, n times. -->\n<!-- sims <- replicate(1e6, get_random_pair()) -->\n<!-- # t() is short for \"transpose\" and simple rotates the object 90 degrees (so rows become columns and columns become rows) -->\n<!-- sims <- t(sims) -->\n<!-- cor(sims[,1], sims[,2]) -->\n\n<!-- ``` -->\n\n\n\n</div><p class=\"optional-end\"></p>\n\n\n\n<br><br>\n\n\n\n<div class=\"optional-begin\"><span id='opt-start-11' class=\"fa fa-hand-o-right optional-icon clickable\" onclick=\"toggle_visibility('opt-body-11', 'opt-start-11')\"> <span class=\"olab\">Optional - Extra difficult. Calculate ICC manually</span></span></div><div class=\"optional-body\" id = \"opt-body-11\" style=\"display: none;\">\n\n\nWe have equal group sizes here (there are 2 $\\times$ 15 participants, each with 20 observations), which makes calculating ICC by hand a lot easier, but it's still a bit tricky.  \n\nLet's take a look at the formula for ICC\n\n\n$$\n\\begin{align}\nICC \\; (\\rho) = & \\frac{\\sigma^2_{b}}{\\sigma^2_{b} + \\sigma^2_e} \\\\\n\\qquad \\\\\n= & \\frac{\\frac{MS_b - MS_e}{k}}{\\frac{MS_b - MS_e}{k} + MS_e} \\\\\n\\qquad \\\\\n= & \\frac{MS_b - MS_e}{MS_b + (k-1)MS_e} \\\\\n\\qquad \\\\\n\\qquad \\\\\n\\text{Where:} & \\\\ \nk = & \\textrm{number of observations in each group} \\\\\nMS_b = & \\textrm{Mean Squares between groups} = \\frac{\\text{Sums Squares between groups}}{df_\\text{groups}}\n= \\frac{\\sum\\limits_{i=1}(\\bar{y}_i - \\bar{y})^2}{\\textrm{n groups}-1}\\\\\nMS_e = & \\textrm{Mean Squares within groups} \\frac{\\text{Sums Squares within groups}}{df_\\text{within groups}} \n= \\frac{\\sum\\limits_{i=1}\\sum\\limits_{j=1}(y_{ij} - \\bar{y_i})^2}{\\textrm{n obs}-\\textrm{n groups}}\\\\\n\\end{align}\n$$\n\nSo we're going to need to calculate the grand mean of $y$, the group means of $y$, and then the various squared differences between group means and grand mean, and between observations and their respective group means.  \n\nThe code below will give us a new column which is the overall mean of y. This bit is fairly straightforward. \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbball %>% mutate(\n  grand_mean = mean(hrv)\n)\n```\n:::\n\n\n\n:::rtip\nWe have seen a lot of the combination of `group_by() %>% summarise()`, but we can also combine `group_by()` with `mutate()`!\n:::\n\nTry the following:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbball %>% mutate(\n    grand_mean = mean(hrv)\n  ) %>% \n  group_by(sub) %>%\n  mutate(\n    group_mean = mean(hrv)\n  )\n```\n:::\n\n\n\n:::rtip\n**The grouping gets carried forward.**  \n\nUsing `group_by()` can quite easily land you in trouble if you forget that you have grouped the dataframe. \n\nLook at the output of `class()` when we have grouped the data. It still mentions something about the grouping. \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbball <- bball %>% mutate(\n    grand_mean = mean(hrv)\n  ) %>% \n  group_by(sub) %>%\n  mutate(\n    group_mean = mean(hrv)\n  )\n\nclass(bball)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"grouped_df\" \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n:::\n:::\n\n\nTo remove the grouping, we can use `ungroup()` (we could also just add this to the end of our code sequence above and re-run it):\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbball <- ungroup(bball)\nclass(bball)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n:::\n:::\n\n\n:::\n\nNow we need to create a column which is the squared differences between the observations $y_{ij}$ and the group means $\\bar{y_i}$.  \nWe also want a column which is the squared differences between the group means $\\bar{y_i}$ and the overall mean $\\bar{y}$.  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbball <- bball %>% \n  mutate(\n    within = (hrv-group_mean)^2,\n    between = (group_mean-grand_mean)^2\n  )\n```\n:::\n\n\nAnd then we want to sum them:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nssbetween = sum(bball$between)\nsswithin = sum(bball$within)\n```\n:::\n\n\nFinally, we divide them by the degrees of freedom. \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Mean Squares between\nmsb = ssbetween / (30-1)\n# Mean Squares within \nmse = sswithin / (600-30)\n```\n:::\n\n\nAnd calculate the ICC!!!\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# ICC\n(msb-mse) /(msb + (19*mse))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3141482\n```\n:::\n:::\n\n\n\n\n</div><p class=\"optional-end\"></p>\n\n\n\n:::\n\n\n\n<div class='question-begin'>Question 10</div><div class='question-body'>\n\n\n> How do the size and type of potential reward/loss interact to influence levels of stress? \n\nUsing `lm()`, we might fit the following model to investigate the research question above. \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(hrv ~ stakes*condition, data = bball)\n```\n:::\n\n\nHowever, we know that this simply ignores that our observations are not independent - we have repeated measures from the same individuals. Given that roughly 30% of the variation in HRV can be attributed to variability between participants (as found when we calculated ICC), we don't want to mis-attribute this to differences between experimental conditions.  \n\nUsing the \"no pooling\" method (i.e., including participant as a fixed effect), becomes difficult because the `sub` variable (the participant id variable) also uniquely identifies the two conditions. Note that if we fit the following model, some coefficients are not defined.  \nTry it and see:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(hrv ~ stakes*sub + stakes*condition, data=bball)\n```\n:::\n\n\nThis sort of perfectly balanced design has traditionally been approached with extensions of ANOVA (\"repeated measures ANOVA\", \"mixed ANOVA\"). These methods can partition out variance due to one level of clustering (e.g. subjects), and can examine factorial designs when one factor is within cluster, and the other is between. You can see an example [here](example_00_anova.html) if you are interested. However, ANOVA has a lot of constraints - it can't handle multiple levels of clustering (e.g. children in classes in schools), it will likely require treating variables such as time as a factor, and it's not great with missing data.  \nThe multi-level model (MLM) provides a more flexible framework, and this is what we will begin to look at next week.  \n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n",
    "supporting": [
      "01_regressionrefresh_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}