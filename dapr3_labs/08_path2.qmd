---
title: "Mediation"
params: 
    SHOW_SOLS: TRUE
    TOGGLE: TRUE
editor_options: 
  chunk_output_type: console
---


```{r}
#| label: setup
#| include: false
source('assets/setup.R')
library(tidyverse)
library(patchwork)
library(effects)
library(knitr)
library(kableExtra)
library(xaringanExtra)
xaringanExtra::use_panelset()
library(lavaan)
library(semPlot)
# knitr::opts_chunk$set(cache = TRUE)
options(digits=3, scipen = 3)
```

:::lo
**Relevant packages**

+ lavaan  
+ semPlot or tidySEM
+ mediation

::: 


::: {.callout-note collapse="true"}
## What is 'mediation'?   

Let's imagine we are interested in peoples' intention to get vaccinated, and we observe the following variables: 

- Intention to vaccinate (scored on a range of 0-100)  
- Health Locus of Control (HLC) score (average score on a set of items relating to perceived control over ones own health)  
- Religiosity (average score on a set of items relating to an individual's religiosity). 

<!-- We are assuming here that we do not have the individual items, but only the scale scores (if we had the individual items we might be inclined to model religiosity and HLC as latent variables!).    -->
If we draw out our variables, and think about this in the form of a standard regression model with "Intention to vaccinate" as our outcome variable, then all the lines are filled in for us (see @fig-mregpath). 

```{r}
#| label: fig-mregpath
#| echo: false
#| fig-cap: "Multiple regression as a path model"
knitr::include_graphics("images/path/path1.png")
```

But what if our theory suggests that some other model might be of more relevance? For instance, what if we believe that participants' religiosity has an effect on their Health Locus of Control score, __*which in turn*__ affects the intention to vaccinate (see @fig-medpath1)?   

```{r}
#| label: fig-medpath1
#| echo: false
#| fig-cap: "Mediation as a path model (If you're interested, you can find the inspiration for this example data from the paper [here](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7596314/). I haven't properly read it though!)"
#| out-height: "300px"
knitr::include_graphics("images/path/path2.png")
```

In this case, the HLC variable is thought of as a **mediator**, because it mediates the effect of religiosity on intention to vaccinate. In this theoretical model, we distinguishing between two possible types of effect: **direct** and **indirect**. 

:::statbox
**Direct vs Indirect**  

In path diagrams:

- Direct effect = one single-headed arrow between the two variables concerned  
- Indirect effect = An effect transmitted via some other variables   

:::

:::

We've seen how path analysis works in last week's lab, and we can use that same logic to investigate models which have quite different structures such as those including mediating variables. 

Because we have multiple **endogenous** variables here, then we're immediately drawn to path analysis, because we're in essence thinking of conducting several regression models. As we can't fit our theoretical model into a nice straightforward regression model (we would need several), then we can use path analysis instead, and just smush lots of regressions together, allowing us to estimate things all at once.  

::: {.callout-note collapse="true"}
## Doing Path Mediation 1: Data

We'll continue with the example in @fig-medpath1, for which we have simulated some data.  

:::frame
__Data: VaxDat.csv__

100 parents were recruited and completed a survey that included measures of Health Locus of Control, Religiosity, and a sliding scale of 0 to 100 on how definite they were that their child would receive the vaccination for measles, mumps & rubella.  

- Intention to vaccinate (scored on a range of 0-100)  
- Health Locus of Control (HLC) score (average on a set of 5 items - each scoring 0 to 6 - relating to perceived control over ones own health)  
- Religiosity (average on a set of 5 items - each scoring 0 to 6 - relating to an individual's religiosity). 

The data is available at https://uoepsy.github.io/data/vaxdat.csv  

:::

First we read in our data:  
```{r}
vax <- read_csv("https://uoepsy.github.io/data/vaxdat.csv")
summary(vax)
```

It looks like we have a value we shouldn't have there. We have a value of religiosity of -1. But the average of 5 items which each score 0 to 6 will have to fall within those bounds.  
  
Let's replace any values <0 with NA. 
```{r}
vax <- 
    vax %>% 
    mutate(religiosity = ifelse(religiosity < 0, NA, religiosity))
summary(vax)
```
Now let's just check the marginal distributions of each variable.  
There are lots of functions that we might use, but for a quick eyeball, I quite like the `pairs.panels()` and `multi.hist()` functions from the __psych__ package. 
```{r}
library(psych)
pairs.panels(vax)
```

:::

::: {.callout-note collapse="true"}
## Doing Path Mediation 1: Model Specification

Okay, we're ready to start thinking about our model.  
First we specify the relevant paths:
```{r}
med_model <- " 
    intention ~ religiosity
    intention ~ hlc
    hlc ~ religiosity
"
```

If we fit this model as it is, we won't actually be testing the indirect effect, we will simply be fitting a couple of regressions.  

To specifically test the indirect effect, we need to explicitly **define** the indirect effect in our model, by first creating a label for each of its sub-component paths, and then defining the indirect effect itself as the product of these two paths (why the product? [Click here for a lovely explanation from Aja Murray](https://uoepsy.github.io/msmr/indirect_effects.pdf)).  
  
To do this, we use a new operator, `:=`. 

```{r}
med_model <- " 
    intention ~ religiosity
    intention ~ a*hlc
    hlc ~ b*religiosity
    
    indirect:=a*b
"
```


:::rtip
**:=** 

_This operator 'defines' new parameters which take on values that are an arbitrary function of the original model parameters. The function, however, must be specified in terms of the parameter labels that are explicitly mentioned in the model syntax._
  
([the lavaan project](https://lavaan.ugent.be/))

Note. The labels we use are completely up to us. This would be equivalent:
```{r}
#| eval: false
med_model <- " 
    intention ~ religiosity
    intention ~ peppapig * hlc
    hlc ~ kermit * religiosity
    
    indirect:= kermit * peppapig
"
```

:::

:::

::: {.callout-note collapse="true"}
## Doing Path Mediation 1: Model Estimation

It is common to estimate the indirect effect using a bootstrapping approach (remember, bootstrapping involves resampling the data with replacement, thousands of times, in order to empirically generate a sampling distribution).  

:::statbox
__Why do we bootstrap mediation analysis?__

We compute our indirect effect as the _product_ of the sub-component paths. However, this results in the estimated indirect effect rarely following a normal distribution, and makes our usual analytically derived standard errors & p-values inappropriate.   
Instead, bootstrapping has become the norm for assessing sampling distributions of indirect effects in mediation models. 

::: 

We can do this easily in lavaan:

```{r}
mm1.est <- sem(med_model, data=vax, se = "bootstrap") 
summary(mm1.est, ci = TRUE)
```

:::int
We can see that the 95% bootstrapped confidence interval for the indirect effect of religiosity on intention to vaccinate does not include zero. We can conclude that the indirect effect is significant at $p <.05$. The direct effect is __not__ significantly different from zero, suggesting that we have __complete mediation__ (religiosity has _no_ effect on intention to vaccinate after controlling for health locus of control). 
:::

Finally, we can visualise the estimates for our model using the `semPaths()` function from the __semPlot__ package, and also with the `graph_sem()` function from the __tidySEM__ package.  
_Often, if we want to include a path diagram in a report then the output of these functions would not usually meet publication standards, and instead we tend to draw them in programs like powerpoint!)_
```{r}
library(tidySEM)
graph_sem(mm1.est, layout = get_layout(mm1.est))
```

:::


::: {.callout-note collapse="true"}
## Partial/Complete Mediation

If we have a variable $X$ that we take to cause variable $Y$, then our path diagram will look like so:
```{r}
#| echo: false
knitr::include_graphics("images/path/MED1.png")
```
In this diagram, path $c$ is the __total effect__. This is the _unmediated_ effect of $X$ on $Y$.  
However, while the effect of $X$ on $Y$ could in part be explained by the process of being mediated by some variable $M$, the variable $X$ could still affect $Y$ directly.  
Our mediating model is shown below:

```{r}
#| echo: false
knitr::include_graphics("images/path/MED2.png")
```

In this case, path $c'$ is the __direct effect__.  

- __Complete mediation__ is when $X$ _no longer_ affects $Y$ after $M$ has been controlled (so path $c'$ is not significantly different from zero). 
- __Partial mediation__ is when the path from $X$ to $Y$ is _reduced in magnitude_ when the mediator $M$ is introduced, _but still different from zero._  
- The __Proportion Mediated__ is the amount of the total effect of $X$ to $Y$ that goes via $M$. i.e. $\frac{a \times b}{c}$ in the images above. 

:::



# Exercises: Conduct Problems

This week's exercises focus on the technique of path analysis using data on conduct problems in adolescence. 

:::frame
__Data: conduct problems__  

A researcher has collected data on n=557 adolescents and would like to know whether there are associations between conduct problems (both aggressive and non-aggressive) and academic performance and whether the relations are mediated by the quality of relationships with teachers. 

```{r}
#| echo: false
tibble(
    variable = read_csv("https://uoepsy.github.io/data/cp_teachacad.csv") %>% names,
    description = c("Participant ID","Academic performance (standardised)","Teacher Relationship Quality (standardised)","Non-aggressive conduct problems (standardised)","Aggressive conduct problems (standardised)")
) %>% knitr::kable(.)
```



The data is available at https://uoepsy.github.io/data/cp_teachacad.csv     
:::


`r qbegin(1)`
First, read in the dataset from https://uoepsy.github.io/data/cp_teachacad.csv     
`r qend()` 
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
```{r}
#| message: false
cp_teach<-read_csv("https://uoepsy.github.io/data/cp_teachacad.csv")
summary(cp_teach)
```
`r solend()`

`r qbegin(2)`
Use the `sem()` function in lavaan to specify and estimate a straightforward linear regression model to test whether aggressive and non-aggressive conduct problems significantly predict academic performance.  

How do your results compare to those you obtain using the `lm()` function?
`r qend()` 
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
``` {r simple regression in lavaan}
# we can fit the model in lavaan as follows:
# first we specify the model using lavaan syntax
sr_lavaan<-'Acad~Non_agg+Agg'
# next we can estimate the model using the sem() function
sr_lavaan.est<-sem(sr_lavaan, data=cp_teach)
# we can inspect the results using the summary() function
summary(sr_lavaan.est)

# the same model can be fit using lm():

sr_lm<-lm(Acad~Non_agg+Agg, data=cp_teach)
summary(sr_lm)
```

We can see that both non-aggressive and aggressive conduct problems significantly predict academic perfofmance. We can also see that we get the same results when we use the `sem()` function as we do when we use the `lm()` function. Lavaan will give essentially the same results as `lm()` for simple  and multiple regression problems. However, if we have multiple outcome variables in our model it is advantageous to do this using path mediation model with lavaan. This allows us to include all the regressions in a single model.
`r solend()`

`r qbegin(3)`
Now specify a model in which non-aggressive conduct problems have both a direct and indirect effect (via teacher relationships) on academic performance
`r qend()` 

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
```{r path analysis for non-aggressive conduct problems}
model1<-'
    #we regress academic performance on non-aggressive conduct problems (the direct effect)
    Acad~Non_agg
    
    #we regress academic peformance on teacher relationship quality
    Acad~Teach_r
    
    #we regress teacher relationship quality on non-aggressive conduct problems
    Teach_r~Non_agg 
'
```
`r solend()`

`r qbegin(4)`
Make sure in your model you _define_ (using the `:=` operator) the indirect effect in order to test the hypothesis that non-aggressive conduct problems have both a direct and an indirect effect (via teacher relationships) on academic performance. 

Fit the model and examine the 95% CI.
`r qend()` 
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r path analysis for non-aggressive conduct problems with constraints}

#model specification
model1<-'
    Acad~Non_agg
    #we label the two parameters that comprise the indirect effect b and c
    Acad~b*Teach_r    
    Teach_r~c*Non_agg  
    
    # the indirect effect is the product of b and c. We create a new parameter (ind) to estimate the indirect effect
    ind:=b*c   
'

#model estimation
model1.est<-sem(model1, data=cp_teach, se='bootstrap') 

# we request bootstrapped standard errors to assess the signifance of the indirect effect
summary(model1.est, ci=T)
```

We can see that the 95% bootstrapped confidence interval for the indirect effect of non-aggressive conduct problems on academic performance ('ind') does not include zero. We can conclude that the indirect effect is significant at $p <.05$. The direct effect is also statistically significant at $p < .05$.
`r solend()`

`r qbegin(5)`
Specify a new parameter which is the total (direct+indirect) effect of non-aggressive conduct problems on academic performance.  

Hint: we should have already got labels in our model for the constituent effects, so we can just use `:=` to create a sum of them. 
`r qend()` 
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
We can create a new parameter that is the sum of the direct and indirect effect to evaluate the total effect of non-aggressive conduct problems on academic performance.

```{r path analyis total}

#model specification

model1<-'
    # we now also label the indirect effect of non-aggressive conduct problems on academic performance
    Acad~a*Non_agg    
    Acad~b*Teach_r    
    Teach_r~c*Non_agg  
    
    ind:=b*c   
    #the total effect is the indirect effect plus the direct effect
    total:=b*c+a
'

#model estimation
model1.est<-sem(model1, data=cp_teach,se='bootstrap') 

# we request bootstrapped standard errors to assess the signifance of the indirect effect
summary(model1.est, ci=T)
```
`r solend()`



# Exercises: More Conduct Problems

`r qbegin(6)`
Now specify a model in which __both__ aggressive and non-aggressive conduct problems have both direct and indirect effects (via teacher relationships) on academic performance. Include the parameters for the indirect effects.
`r qend()` 
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
We now have two predictors, one mediator and one outcome (and two indirect effects, one for each predictor). We can represent this in two lines: one where we specify academic performance as the outcome variable and one where we specify teacher relationships (the mediator) as the outcome variable. 

```{r two predictors}
model2<-
   'Acad~Agg+Non_agg+b*Teach_r
    Teach_r~c1*Agg+c2*Non_agg
   
    ind1:=b*c1 #indirect effect for aggressive conduct problems
    ind2:=b*c2 #indirect effect for non-aggressive conduct problems
'
```


`r solend()`

`r qbegin(7)`
Now estimate the model and test the significance of the indirect effects
`r qend()` 
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r estimate two predictor model}
model2.est<-sem(model2,  data=cp_teach,se='bootstrap') 
summary(model2.est, ci=T)
```

We can see that the 95% confidence intervals for both indirect effects do not include zero, therefore, we can conclude that they are significant at $p < .05$. 
`r solend()`


`r qbegin(8)`
Open powerpoint, or google drawings, or microsoft paint (!), and create a diagram of your estimated model. 
`r qend()` 
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
#| label: fig-pathcp1
#| echo: false
#| out-width: "1200px"
#| fig-cap: "Effect of conduct problems on academic performance mediated by quality of teacher relationship."
knitr::include_graphics("images/path/pathanaly.png")
```

`r solend()`


`r qbegin(9)`
Write a brief paragraph reporting on the results of the model estimates in Question B2. Include a figure or table to display the parameter estimates.
`r qend()` 
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

:::int 

A path mediation model was used to test the direct and indirect effects (via teacher relationship quality) of aggressive and non-aggressive conduct problems on academic performance. In the model, academic performance was regressed on teacher relationship quality, non-aggressive conduct problems and aggressive conduct problems while teacher relationship quality (the mediator) was regressed on aggressive and non-aggressive conduct problems. The indirect effects were tested using the product of the coefficient for the regression of outcome on mediator and the coefficient for the regression of mediator on predictor. The statistical significance of the indirect effects were evaluated using boostrapped 95% confidence intervals with 1000 draws.

Unstandardised parameter estimates are provided in @fig-pathcp. Solid lines indicate that a parameter is significant at $p <. 05$, while dashed lines represent non-significant paths.The indirect effects of both non-aggressive  ($b = 0.09$, 95% CI=0.05-0.14) and aggressive ($b = 0.15$, 95% CI=0.08-0.22) conduct problems on academic performance were statistically significant. 

```{r}
#| label: fig-pathcp
#| echo: false
#| out-width: "1200px"
#| fig-cap: "Effect of conduct problems on academic performance mediated by quality of teacher relationship."
knitr::include_graphics("images/path/pathanaly.png")
```
:::

`r solend()`

::: {.callout-note collapse="true"}
## Optional: Mediation using separate models

Following [Baron & Kenny 1986](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.917.2326&rep=rep1&type=pdf), we can conduct mediation analysis by using three separate regression models.  

1. $m \sim x$
2. $y \sim x + m$

The __mediation__ package is a very nice approach that allows us to conduct mediation this way, and it also extends to allow us to have categorical variables (we can use a logistic regression as one of our models), or to have multilevel data (our models can be fitted using __lme4__).  

Step 1. Estimate the effect of the predictor on the mediator `m ~ x`:
```{r}
mod2 <- lm(hlc ~ religiosity, data = vax)
summary(mod2)$coefficients
```

Step 2. Estimate the effects of the predictor and mediator on the outcome `y ~ x + m`:  
```{r}
mod3 <- lm(intention ~ religiosity + hlc, data = vax)
summary(mod3)$coefficients
```

Step 3. Estimate the mediation effects  
```{r}
library(mediation)
mymediation <- mediate(model.m = mod2, 
                       model.y = mod3, 
                       treat='religiosity', 
                       mediator='hlc',
                       boot=TRUE, sims=500)

summary(mymediation)
```

- ACME: Average Causal Mediation Effects (the indirect path $\mathbf{a \times b}$ in @fig-medpaths).  
- ADE: Average Direct Effects (the direct path $\mathbf{c'}$ in @fig-medpaths).  
- Total Effect: sum of the mediation (indirect) effect and the direct effect (this is $\mathbf{(a \times b) + c)}$ in @fig-medpaths).  

```{r}
#| echo: false
#| label: fig-medpaths
#| fig-cap: "Mediation Model. The indirect effect is the product of paths a and b. c' is the direct effect of x on y."
knitr::include_graphics("images/path/MED2.png")
```

:::


<div class="tocify-extend-page" data-unique="tocify-extend-page" style="height: 0;"></div>