{
  "hash": "f84ed83aacbb0e9af140059a2873f075",
  "result": {
    "markdown": "---\ntitle: \"7. Path Analysis\"\nparams: \n    SHOW_SOLS: TRUE\n    TOGGLE: TRUE\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n:::lo\n**Relevant packages**  \n\n+ lavaan  \n+ semPlot or tidySEM\n\n::: \n\n\nBy now, we are getting more comfortable with the regression world, and we can see how it is extended to lots of different types of outcome and data structures. So far in DAPR3 it's been all about the multiple levels. This has brought so many more potential study designs that we can now consider modelling - pretty much any study where we are interested in explaining some outcome variable, and where we have sampled clusters of observations (or clusters of clusters of clusters of ... etc.).  \n\nBut we are still restricted to thinking, similar to how we thought in DAPR2, about one single outcome variable. In fact, if we think about the structure of the fixed effects part of a model (i.e., the bit we're _specifically interested in_), then we're still limited to thinking of the world in terms of \"this is my outcome variable, everything else predicts it\". \n\n::: {.callout-note collapse=\"true\"}\n## Regression as a path diagram\n\n1. Imagine writing the names of all your variables on a whiteboard\n2. Specify which one is your dependent (or \"outcome\" or \"response\") variable. \n3. Sit back and relax, you're done!\n\nIn terms of a _theoretical_ model of the world, there's not really much to it. We have few choices in the model we construct beyond specifying which is our outcome variable.  \nWe can visualise our multiple regression model like this: \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![In multiple regression, we decide which variable is our outcome variable, and then everything else is done for us](images/path/mregpath.png){#fig-mregfig fig-align='center' width=250px}\n:::\n:::\n\n\nOf course, there are a few other things that are included (an intercept term, the residual error, and the fact that our predictors can be correlated with one another), but the idea remains pretty much the same:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Multiple regression with intercept, error, predictor covariances](images/path/mregpath2.png){#fig-mregfig2 fig-align='center' width=250px}\n:::\n:::\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## A model reflects a theory\n\nWhat if I my theoretical model of the world doesn't fit the structure of \"one outcome, multiple precictors\"?  \n\nLet's suppose I have 5 variables: Age, Parental Income, Income, Autonomy, and Job Satisfaction. I draw them up on my whiteboard:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![My variables](images/path/paths1nopaths.png){#fig-path1nopath fig-align='center' width=350px}\n:::\n:::\n\n\nMy theoretical understanding of how these things fit together leads me to link my variables to end up with something like that in @fig-path1path. \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![My theory about my system of variables](images/path/paths1paths.png){#fig-path1path fig-align='center' width=350px}\n:::\n:::\n\nIn this diagram, a persons income is influenced by their age, their parental income, and their level of autonomy, and in turn their income predicts their job satisfaction. Job satisfaction is also predicted by a persons age directly, and by their level of autonomy, which is also predicted by age. It's complicated to look at, but in isolation each bit of this makes theoretical sense. \n\nTake each arrow in turn and think about what it represents:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/path/paths1desc.png){#fig-path1pathdesc fig-align='center' width=550px}\n:::\n:::\n\n\nIf we think about trying to fit this \"model\" with the tools that we have, then we might end up wanting to fit three separate regression models, which between them specify all the different arrows in the diagram:\n\n$$\n\\begin{align}\n\\textrm{Job Satisfaction} & = \\beta_0 + \\beta_1(\\textrm{Age}) + \\beta_2(\\textrm{Autonomy}) + \\beta_3(\\textrm{Income}) + \\varepsilon \\\\\n\\textrm{Income} & = \\beta_0 + \\beta_1(\\textrm{Age}) + \\beta_2(\\textrm{Autonomy}) + \\beta_2(\\textrm{Parental Income}) + \\varepsilon \\\\\n\\textrm{Autonomy} & = \\beta_0 + \\beta_1(\\textrm{Age}) + \\varepsilon \\\\\n\\end{align}\n$$\n\nThis is all well and good, but what if I want to talk about how well my entire model (@fig-path1path) fits the data we observed?  \n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Introducing Path Analysis\n\nThe starting point for Path Analysis is to think about our theories in terms of the connections between variables drawn on a whiteboard. By representing a theory as paths to and from different variables, we open up a whole new way of 'modelling' the world around us.  \n\nThere are a few conventions to help us understand this sort of diagrammatical way of thinking. By using combinations of rectangles, ovals, single- and double-headed arrows, we can draw all sorts of model structures. In Path Diagrams, we use specific shapes and arrows to represent different things in our model:\n\n__Shapes and Arrows in Path Diagrams__  \n\n- **Observed variables** are represented by squares or rectangles. These are the named variables of interest which exist in our dataset - i.e. the ones which we have measured directly. \n- **Variances/Covariances** are represented by double-headed arrows. In many diagrams these are curved. \n- **Regressions** are shown by single headed arrows (e.g., an arrow from $x$ to $y$ for the path $y~x$).  \n<li style=\"opacity:.3\">**Latent variables** are represented by ovals, and we will return to these in a few weeks time!</li>\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/path/semplots.png){fig-align='center' width=650px}\n:::\n:::\n\n\n**Terminology refresher**  \n\n- **Exogenous variables** are a bit like what we have been describing with words like \"independent variable\" or \"predictor\". In a path diagram, they have no paths coming from other variables in the system, but have paths *going to* other variables.  \n- **Endogenous variables** are more like the \"outcome\"/\"dependent\"/\"response\" variables we are used to. They have some path coming from another variable in the system (and may also - but not necessarily - have paths going out from them).  \n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## How does it work (in brief)? \n\nThe logic behind path analysis is to estimate a system of equations that can reproduce the covariance structure that we see in the data. \n\n1. We specify our theoretical model of the world as a system of paths between variables\n2. We collect data on the relevant variables and we observe a correlation matrix (i.e. how each variable correlates with all others)\n3. We fit our model to the data, and evaluate how well our theoretical model (a system of paths) can reproduce the correlation matrix we observed. \n\n:::\n\n\n::: {.callout-caution collapse=\"true\"}\n## OPTIONAL How does it work (less brief)? \n\n__Path Diagram Tracing__\n\nFor Path Diagrams that meet a certain set of pre-requisites, we can use a cool technique called Path Tracing to estimate the different paths (i.e., the coefficients) from just the covariance matrix of the dataset. \nFor us to be able to do this, a Path Diagram must meet these criteria:\n\n- All our exogenous variables are correlated (unless we specifically assume that their correlation is zero)\n- All models are 'recursive' (no two-way causal relations, no feedback loops)\n- Residuals are uncorrelated with exogenous variables\n- Endogenous variables are not connected by correlations (we would use correlations between residuals here, because the residuals are not endogenous)\n- All 'causal' relations are linear and additive\n- 'causes' are unitary (if A -> B and A -> C, then it is presumed that this is the same aspect of A resulting in a change in both B and C, and not two distinct aspects of A, which would be better represented by two correlated variables A1 and A2). \n\n\n\n::: {.callout-caution collapse=\"true\"}\n#### Causal? \n\nIt is a slippery slope to start using the word 'cause', and personally I am not that comfortable using it here. However, you will likely hear it a lot in resources about path analysis, so it is best to be warned.  \n\nPlease keep in mind that we are using a very broad definition of 'causal', simply to reflect the one way nature of the relationship we are modeling. In @fig-causes, a change in the variable **X1** is associated with a change in **Y**, but not vice versa. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Paths are still just regressions.](images/path/causes.png){#fig-causes fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n\n\n__Tracing Rules__  \n\nThanks to [Sewal Wright](https://www.jstor.org/stable/pdf/2527551.pdf?casa_token=3QF0ad2ZoBcAAAAA:MbEkDNNdoLZr1SXE4LrnK--qrhhsTXLgsRtcWre1UvWxiQiGNUl5vWytGp34XIxhAYMZJe-MbIcBnEwXSfX6MAONevz04-sMXpEDI3IaYKk6mMX46QvX), we can express the correlation between any two variables in the system as the sum of all *compound paths* between the two variables. \n\n*compound paths* are any paths you can trace between A and B for which there are: \n\n- no loops\n- no going forward then backward\n- maximum of one curved arrow per path\n\n\n__EXAMPLE__  \n\nLet's consider the example below, for which the paths are all labelled with lower case letters $a, b, c, \\text{and } d$. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![A multiple regression model as a path diagram](images/path/patheq1.png){#fig-patheq1 fig-align='center' width=80%}\n:::\n:::\n\n\nAccording to Wright's tracing rules above, write out the equations corresponding to the 3 correlations between our observed variables (remember that $r_{a,b} = r_{b,a}$, so it doesn't matter at which variable we start the paths). \n\n- $r_{x1,x2} =  c$  \n- $r_{x1,y} = a + bc$  \n- $r_{x2,y} =  b + ac$  \n\nNow let's suppose we observed the following correlation matrix:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\negdat <- read_csv(\"https://uoepsy.github.io/data/patheg.csv\")\negdat <- read_csv(\"../../data/patheg.csv\")\nround(cor(egdat),2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     x1   x2    y\nx1 1.00 0.36 0.75\nx2 0.36 1.00 0.60\ny  0.75 0.60 1.00\n```\n:::\n:::\n\nWe can plug these into our system of equations:\n\n- $r_{x1,x2} = c = 0.36$  \n- $r_{x1,y} = a + bc = 0.75$   \n- $r_{x2,y} = b + ac = 0.60$\n\nAnd with some substituting and rearranging, we can work out the values of $a$, $b$ and $c$. \n\n::: {.callout-note collapse=\"true\"}\n## Click for answers\n\nThis is what I get:\n\na = 0.61  \nb = 0.38  \nc = 0.36  \n\n:::\n\nWe can even work out what the path labeled $d$ (the residual variance) is.  \nFirst we sum up all the equations for the paths from Y to Y itself.  \nThese are:\n\n- $a^2$ (from Y to X1 and back)  \n- $b^2$ (from Y to X2 and back)  \n- $acb$ (from Y to X1 to X2 to Y)\n- $bca$ (from Y to X2 to X1 to Y)\n  \nSumming them all up and solving gives us:  \n$$\n\\begin{align}\n r_{y \\cdot x1, x2} & = a^2 + b^2 + acb + bca\\\\\n & = 0.61^2 + 0.38^2 + 2 \\times(0.61 \\times 0.38 \\times 0.36)\\\\\n & = 0.68 \\\\\n\\end{align}\n$$\nWe can think of this as the portion of the correlation of Y with itself that occurs *via the predictors*. Put another way, this is the amount of variance in Y explained jointly by X1 and X2, which sounds an awful lot like an $R^2$!  \nThe path labelled $d$ is simply all that is left in Y after taking out the variance explained by X1 and X2, meaning that the path $d = \\sqrt{1-R^2}$ (i.e., the residual variance!).  \n\nHooray! We've just worked out regression coefficients when all we had was the correlation matrix of the variables! It's important to note that we have been using the correlation matrix, so, somewhat unsurprisingly, our estimates are *standardised* coefficients. \n\nBecause we have the data itself, let's quickly find them with `lm()`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# model:\nmodel1 <- lm( scale(y) ~ scale(x1) + scale(x2), egdat)\n# extract the coefs\ncoef(model1) %>% round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)   scale(x1)   scale(x2) \n       0.00        0.61        0.38 \n```\n:::\n\n```{.r .cell-code}\n# extract the r^2\nsummary(model1)$r.squared\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.688\n```\n:::\n:::\n\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Introducing `lavaan`  \n\nFor the remaining weeks of the course, we're going to rely heavily on the **lavaan** (**La**tent **Va**riable **An**alysis) package. This is the main package in R for fitting path diagrams (as well as more cool models like factor analysis sructures and structural equation mdoels). There is a huge scope of what this package can do.  \nThe first thing to get to grips with is the various new operators which it allows us to use.   \n\nOur old multiple regression formula in R was specified as `y ~ x1 + x2 + x3 + ... `.  \nIn __lavaan__, we continue to fit regressions using the `~` symbol, but we can also specify the construction of latent variables using `=~` and residual variances & covariances using `~~`.  \n\n|  formula type|  operator|  mnemonic|\n|--:|--:|--:|\n|  latent variable definition|  `=~`|  \"is measured by\"|\n|  regression|  `~`|  \"is regressed on\"|\n|  (residual) (co)variance |  `~~`|  \"is correlated with\"|\n|  intercept |  `~1`|  \"intercept\"|\n|  new parameter |  `:=`|  \"is defined as\"|\n\n(from https://lavaan.ugent.be/tutorial/syntax1.html) \n\nIn practice, fitting models in __lavaan__ tends to be a little different from things like `lm()` and `(g)lmer()`.  \nInstead of including the model formula *inside* the fit function (e.g., `lm(y ~ x1 + x2, data = df)`), we tend to do it in a step-by-step process. \nThis is because as our models become more complex, our formulas can pretty long!   \n\nWe write the model as a character string (e.g. `model <- \"y ~ x1 + x2\"`) and then we pass that formula along with the data to the relevant __lavaan__ function, which for our purposes will be the `sem()` function, `sem(model, data = mydata)`.   \n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n#### Fitting a multiple regression model with lavaan\n\nYou can see a multiple regression fitted with __lavaan__ below.  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(lavaan)\nscsdat <- read_csv(\"https://uoepsy.github.io/data/scs_study.csv\")\n\n# the lm() way\nmreg_lm <- lm(dass ~ zo + zc + ze + za + zn + scs, scsdat)\n\n# setting up the model\nmreg_model <- \"\n    #regression\n    dass ~ zo + zc + ze + za + zn + scs\n\"\nmreg_sem <- sem(mreg_model, data=scsdat)\n```\n:::\n\n\nThese are the coefficients from our `lm()` model:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncoefficients(mreg_lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)          zo          zc          ze          za          zn \n    62.1243     -0.0307     -0.0378      0.7449      0.2029      1.5209 \n        scs \n    -0.4865 \n```\n:::\n:::\n\n\nAnd you can see the estimated parameters are the same for our `sem()` model!\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(mreg_sem)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.16 ended normally after 1 iteration\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         7\n\n  Number of observations                           656\n\nModel Test User Model:\n                                                      \n  Test statistic                                 0.000\n  Degrees of freedom                                 0\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  dass ~                                              \n    zo               -0.031    0.242   -0.127    0.899\n    zc               -0.038    0.248   -0.153    0.879\n    ze                0.745    0.377    1.976    0.048\n    za                0.203    0.378    0.537    0.591\n    zn                1.521    0.249    6.097    0.000\n    scs              -0.486    0.071   -6.893    0.000\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .dass             40.021    2.210   18.111    0.000\n```\n:::\n:::\n\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Doing Path Analysis 1: Model Specification\n\n\n\n\n\nThe first part of estimating a path model involves specifying the model. This means basically writing down the paths that are included in your theoretical model. \n\nLet's start by looking at the example about job satisfaction, income, autonomy and age.  \nRecall we had this theoretical model:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/path/paths1paths.png){fig-align='center' width=350px}\n:::\n:::\n\nAnd now let's suppose that we collected data on these variables: \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\njobsatpath <- read_csv(\"https://uoepsy.github.io/data/jobsatpath.csv\")\nhead(jobsatpath)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> jobsat </th>\n   <th style=\"text-align:left;\"> income </th>\n   <th style=\"text-align:left;\"> autonomy </th>\n   <th style=\"text-align:left;\"> age </th>\n   <th style=\"text-align:left;\"> parentincome </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 22 </td>\n   <td style=\"text-align:left;\"> 39 </td>\n   <td style=\"text-align:left;\"> 17 </td>\n   <td style=\"text-align:left;\"> 55 </td>\n   <td style=\"text-align:left;\"> 47 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 29 </td>\n   <td style=\"text-align:left;\"> 35 </td>\n   <td style=\"text-align:left;\"> 58 </td>\n   <td style=\"text-align:left;\"> 51 </td>\n   <td style=\"text-align:left;\"> 43 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 69 </td>\n   <td style=\"text-align:left;\"> 38 </td>\n   <td style=\"text-align:left;\"> 45 </td>\n   <td style=\"text-align:left;\"> 52 </td>\n   <td style=\"text-align:left;\"> 49 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 67 </td>\n   <td style=\"text-align:left;\"> 27 </td>\n   <td style=\"text-align:left;\"> 52 </td>\n   <td style=\"text-align:left;\"> 43 </td>\n   <td style=\"text-align:left;\"> 44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 54 </td>\n   <td style=\"text-align:left;\"> 14 </td>\n   <td style=\"text-align:left;\"> 36 </td>\n   <td style=\"text-align:left;\"> 35 </td>\n   <td style=\"text-align:left;\"> 40 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 25 </td>\n   <td style=\"text-align:left;\"> 25 </td>\n   <td style=\"text-align:left;\"> 39 </td>\n   <td style=\"text-align:left;\"> 48 </td>\n   <td style=\"text-align:left;\"> 44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ... </td>\n   <td style=\"text-align:left;\"> ... </td>\n   <td style=\"text-align:left;\"> ... </td>\n   <td style=\"text-align:left;\"> ... </td>\n   <td style=\"text-align:left;\"> ... </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nRemember we said that we could specify all these paths using three regression models? Well, to specify our path model, we simply write these out like we would do in `lm()`, but this time we do so all in one character string. We still have to make sure that we use the correct variable names, as when we make R estimate the model, it will look in the data for things like \"jobsat\". \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmymodel <- \"\njobsat ~ age + autonomy + income\nincome ~ autonomy + age + parentincome\nautonomy ~ age\n\"\n```\n:::\n\n\nThere are some other things which we will automatically be estimated here: all our exogenous variables (the ones with arrows only going _from_ them) will be free to correlate with one another. We can write this explicitly in the model if we like, using the two tildes `~~` between our two exogenous variables `age` and `parentincome`. We will also get the variances of all our variables.  \n\nWe can see all the paths here:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlavaanify(mymodel)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n            lhs op          rhs\n1        jobsat  ~          age\n2        jobsat  ~     autonomy\n3        jobsat  ~       income\n4        income  ~     autonomy\n5        income  ~          age\n6        income  ~ parentincome\n7      autonomy  ~          age\n8        jobsat ~~       jobsat\n9        income ~~       income\n10     autonomy ~~     autonomy\n11          age ~~          age\n12          age ~~ parentincome\n13 parentincome ~~ parentincome\n```\n:::\n:::\n\nand even make a nice diagram:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(semPlot)\nsemPaths(lavaanify(mymodel))\n```\n\n::: {.cell-output-display}\n![](07_path1_files/figure-html/unnamed-chunk-22-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Doing Path Analysis 2: Model Identification\n\nYou'll have heard the term \"model fit\" many times since the start of DAPR2, when we began model-based thinking. However, there is a crucial difference in what it means when it is used in for path analysis.  \n\nIn things like multiple regression, we have been using \"model fit\" to be the measure of \"how much variance can we explain in y with our set of predictors?\". For a path model, examining \"model fit\" is more like asking \"how well does our model reproduce the characteristics of the data that we observed?\".  \n  \nWe can represent the \"characteristics of our data\" in a covariance matrix, so one way of thinking of \"model fit\" is as \"how well can our model reproduce our observed covariance matrix?\".  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncov(jobsatpath)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             jobsat income autonomy    age parentincome\njobsat       341.62   4.47    107.3 -28.81        -6.47\nincome         4.47  50.17     46.7  29.56        14.83\nautonomy     107.30  46.68    365.6  32.94       -10.00\nage          -28.81  29.56     32.9  38.69         1.81\nparentincome  -6.47  14.83    -10.0   1.81        14.18\n```\n:::\n:::\n\n\nBecause we are working with a covariance matrix here, we are really working with fewer \"bits\" of information than the 50 __people__ in our dataset. We actually are concerned with the 15 unique variances and covariances in our covariance matrix between our 5 variables above.  \n\n__Degrees of freedom__  \n\nWhen we think of \"degrees of freedom\" for a multiple regression model, in DAPR2 we learned that $df = n-k-1$ ($n$ is the number of observations, $k$ is the number of predictors). These degrees of freedom related to the corresponding $F$ and $t$-distributions with which we performed our hypothesis tests (e.g. $t$-tests for a null hypothesis that a coefficient is zero, or $F$-tests for a null that the reduction in residual sums of squares is zero).  \n\nBut in relation to our model's ability to represent a $k \\times k$ covariance matrix (i.e. the covariance matrix of our $k$ variables), we are instead interested in the number of covariances (and not the number of observations). Our \"degrees of freedom\" in the this framework corresponds to the number of *knowns* (observed covariances/variances) minus the number of *unknowns* (parameters to be estimated by the model). A model is only able to be estimated if it has at least 0 degrees of freedom (if there are at least as many knowns as unknowns). A model with 0 degrees of freedom is termed **just-identified**. **Under-** and **Over-** identified models correspond to those with $<0$ and $>0$ degrees of freedom respectively. \n\n:::statbox\n**How many knowns are there?**   \n\nThe number of known covariances in a set of $k$ observed variables is equal to $\\frac{k \\cdot (k+1)}{2}$. \n:::\n\nWhen learning about path models, the visualisations can play a key part. It often helps to draw all our variables (both observed and latent) on the whiteboard, and connect them up according to your theoretical model. You can then count the number of paths (arrows) and determine whether the **number of knowns** > **number of unknowns**. We can reduce the number of unknowns by fixing parameters to be specific values. \n\n:::statbox\n\nBy constraining some estimated parameter to be some specific value, we free-up a degree of freedom! For instance \"the correlation between x1 and x2 is equal to 0.7 ($r_{x_1x_2} = .07$)\". This would turn a previously estimated parameter into a fixed parameter, and this gains us the prize of a lovely degree of freedom!  \n\n**By removing a path altogether, we are constraining it to be zero.**  \n\n:::\n\n:::\n\n\n::: {.callout-caution collapse=\"true\"}\n## OPTIONAL:  multiple regression model is just-identified  \n\nThe multiple regression model is an example of a *just-identified* model! In multiple regression, everything is allowed to covary with everything else, which means that there is a unique solution for all of the model's parameters because there are *as many paths as there are observed covariances*. This means that in this path analysis world, a multiple regression model is \"just-identified\". \n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nIf I have two predictors and one outcome variable, then there are 6 variances and covariances available. For instance: \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncov(somedata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         y     x1     x2\ny  45.6481 0.0149 1.3525\nx1  0.0149 1.0455 0.0196\nx2  1.3525 0.0196 1.0000\n```\n:::\n:::\n\nThe multiple regression model will estimate the two variances of the exogenous variables (the predictors), their covariance, the two paths from each exogenous to the endogenous (each predictor to the outcome), and the error variance. This makes up 6 estimated parameters - which is exactly how many known covariances there are.  \nCount the number of arrows (both single and double headed) in the diagram:  \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](07_path1_files/figure-html/unnamed-chunk-26-1.png){fig-align='center' width=350px}\n:::\n:::\n\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## Doing Path Analysis 3: Model Estimation\n\nEstimating the model is relatively straightforward. We pass the formula we have written to the `sem()` function, along with the data set in which we want it to look for the variables. It will be estimated using maximum likelihood estimation.    \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmymodel.fit <- sem(mymodel, data = jobsatpath)\n```\n:::\n\n\nWe can then examine the parameter estimates: \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(mymodel.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.16 ended normally after 1 iteration\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        10\n\n  Number of observations                            50\n\nModel Test User Model:\n                                                      \n  Test statistic                                 5.050\n  Degrees of freedom                                 2\n  P-value (Chi-square)                           0.080\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  jobsat ~                                            \n    age              -1.566    0.482   -3.250    0.001\n    autonomy          0.347    0.131    2.653    0.008\n    income            0.689    0.439    1.572    0.116\n  income ~                                            \n    autonomy          0.099    0.026    3.796    0.000\n    age               0.631    0.081    7.834    0.000\n    parentincome      1.036    0.128    8.099    0.000\n  autonomy ~                                          \n    age               0.851    0.418    2.038    0.042\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .jobsat          251.098   50.220    5.000    0.000\n   .income           11.293    2.259    5.000    0.000\n   .autonomy        330.771   66.154    5.000    0.000\n```\n:::\n:::\n\n\nWe can now, to \"visualise\" our model, add the estimates to the diagram:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Model estimates](images/path/jobsatmod.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n\n\n\n\n::: {.callout-note collapse=\"true\"}\n## Doing Path Analysis 4: Model Fit\n\nOnce we have estimated a model, we can evaluate how well it fits our sample data. As mentioned above in relation to model identification, when we talk about model fit here, we are asking \"how well does our model reproduce the characteristics of the data that we observed?\", or more specifically \"how well can our model reproduce our observed covariance matrix?\".  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncov(jobsatpath)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             jobsat income autonomy    age parentincome\njobsat       341.62   4.47    107.3 -28.81        -6.47\nincome         4.47  50.17     46.7  29.56        14.83\nautonomy     107.30  46.68    365.6  32.94       -10.00\nage          -28.81  29.56     32.9  38.69         1.81\nparentincome  -6.47  14.83    -10.0   1.81        14.18\n```\n:::\n:::\n\n\nThere are too many different indices of model fit for these types of models, and there's lots of controversy over the various merits and disadvantages and proposed cutoffs of each method. We will return to this more in coming weeks, and the lecture this week contains information on some of them. The important thing to remember: \"model fit\" and \"degrees of freedom\" have quite different meanings to those you are likely used to.  \n\nThe simplest metric of fit is a chi-square value that we can compute that reflects reflects the discrepancy between the _model-implied covariance matrix_ and the _observed covariance matrix_. We can then calculate a p-value for this chi-square statistic by using the chi-square distribution with the degrees of freedom equivalent to that of the model.  \n\nIf we denote the sample covariance matrix as $S$ and the model-implied covariance matrix as $\\Sigma(\\theta)$, then we can think of the null hypothesis here as $H_0: S - \\Sigma(\\hat\\theta) = 0$. \n__In this way our null hypothesis is sort of like saying that our theoretical model is correct__ (and can therefore perfectly reproduce the covariance matrix).  \n\n\n:::\n\n<div class=\"divider div-transparent div-dot\"></div>\n\n\n# Exercises: Burnout\n\n:::frame\n__Data: Passion & Burnout__  \n\nResearchers are interested in the role of obsessive and harmonious passion in psychological wellbeing. The researchers collect data from 100 participants. Participants respond on sliding scales (0-100) for five measures:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> variable </th>\n   <th style=\"text-align:left;\"> description </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> worksat </td>\n   <td style=\"text-align:left;\"> Work Satisfaction: On a scale of 0-100, how satisfied are you with your work? </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> hp </td>\n   <td style=\"text-align:left;\"> Harmonious Passion: On a scale of 0-100, how much do you feel that you freely choose to engage in work outside of working hours? </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> op </td>\n   <td style=\"text-align:left;\"> Obsessive Passion: On a scale of 0-100, how much do you have uncontrollable urges to work outside of working hours? </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> conflict </td>\n   <td style=\"text-align:left;\"> Work Conflict: On a scale of 0-100, how much conflict do you experience in your work? </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> burnout </td>\n   <td style=\"text-align:left;\"> Work Burnout: On a scale of 0-100, how close to burnout at work are you? </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nThe data is available at https://uoepsy.github.io/data/passionpath.csv  \n\n:::\n\n\n\n<div class='question-begin'>Question 1</div><div class='question-body'>\n\n\nLoad in the libraries we will use in these exercises:\n\n- tidyverse  \n- lavaan  \n- semPlot  \n\nRead in the data.\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-1' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-1', 'sol-start-1')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-1\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lavaan)\nlibrary(semPlot)\n\nburnout <- read_csv(\"https://uoepsy.github.io/data/passionpath.csv\")\n```\n:::\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 2</div><div class='question-body'>\n\n\nThe researchers have this theoretical model:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Burnout Theory](images/path/burnoutpath.png){#fig-burn fig-align='center' width=80%}\n:::\n:::\n\n\nSpecify this model and store the formula as an object in R\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-2' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-2', 'sol-start-2')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-2\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nburnoutmod <- \"\nworksat ~ hp\nburnout ~ worksat + conflict\nconflict ~ op + hp\nhp ~~ op\n\"\n```\n:::\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 3</div><div class='question-body'>\n\n\nFit the model to the data using the `sem()` function.\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-3' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-3', 'sol-start-3')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-3\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nburnoutfit <- sem(burnoutmod, data=burnout)\n```\n:::\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 4</div><div class='question-body'>\n\n\nExamine the parameter estimates\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-4' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-4', 'sol-start-4')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-4\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(burnoutfit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.16 ended normally after 28 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        11\n\n  Number of observations                           100\n\nModel Test User Model:\n                                                      \n  Test statistic                                 5.458\n  Degrees of freedom                                 4\n  P-value (Chi-square)                           0.243\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  worksat ~                                           \n    hp                0.420    0.088    4.769    0.000\n  burnout ~                                           \n    worksat          -0.207    0.063   -3.304    0.001\n    conflict         -0.147    0.191   -0.772    0.440\n  conflict ~                                          \n    op                0.095    0.038    2.476    0.013\n    hp               -0.010    0.033   -0.308    0.758\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  hp ~~                                               \n    op               61.628   18.529    3.326    0.001\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .worksat         155.762   22.028    7.071    0.000\n   .burnout          75.347   10.656    7.071    0.000\n   .conflict         19.465    2.753    7.071    0.000\n    hp              200.614   28.371    7.071    0.000\n    op              152.210   21.526    7.071    0.000\n```\n:::\n:::\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 5</div><div class='question-body'>\n\n\nProduce a diagram with the estimates on the paths. \nCan you also produce one which has the _standardised_ estimates?  \n\nTake a look at the help function for `semPaths()`. \nWhat do the arguments `what` and `whatLabels` do? \n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-5' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-5', 'sol-start-5')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-5\" style=\"display: none;\">\n\n\n`what` will weight and colour the paths according something like the estimates. `whatLabels` will provide labels for the paths:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsemPaths(burnoutfit, whatLabels = \"est\")\n```\n\n::: {.cell-output-display}\n![](07_path1_files/figure-html/unnamed-chunk-37-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\nThis will change them to the standardised estimates:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsemPaths(burnoutfit, what = \"std\", whatLabels = \"std\")\n```\n\n::: {.cell-output-display}\n![](07_path1_files/figure-html/unnamed-chunk-38-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 6</div><div class='question-body'>\n\n\n\n- How many variables do you have in your model?\n- How many *knowns* are there in the covariance matrix?  \n- How many *unknowns* are there in your model? \n- How many degrees of freedom do you therefore have?\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-6' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-6', 'sol-start-6')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-6\" style=\"display: none;\">\n\n\n\n- How many variables do you have in your model?  \n  __5__\n  \n- How many *knowns* are there in the covariance matrix? \n  $\\frac{5 \\times (5 + 1)}{2} = 15$\n  \n- How many *unknowns* are there in your model?  \n  There are 6 paths in @fig-burn, but we also need to consider the variances of the 5 variables, so we have 11 things being estimated\n\n- How many degrees of freedom do you therefore have?\n  __15 - 11 = 4__ \n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 7</div><div class='question-body'>\n\n\nTake a look at the summary of the model you fitted. Specifically, examine the bit near the top where it mentions the $\\chi^2$ statistic.  \nIs it significant? \nWhat do we conclude?  \n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-7' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-7', 'sol-start-7')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-7\" style=\"display: none;\">\n\n\nThe $\\chi^2$ statistic is not significant:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npchisq(5.458, df=4, lower.tail=F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.243\n```\n:::\n:::\n\nWe therefore have no evidence to support rejecting our null hypothesis that our model provides a reasonable fit to the data. \n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 8</div><div class='question-body'>\n\n\nTry examing what the other fit measures (RMSEA, SRMR, CLI, TLI:\nHow do they compare with [the cutoffs provided in the lecture?](https://uoepsy.github.io/dapr3/2223/lectures/week1_pathintro.html#37)    \n  \nhint: `summary(modelfit, fit.measures = TRUE)`  \n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-8' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-8', 'sol-start-8')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-8\" style=\"display: none;\">\n\n\nThe fit statistics for our model:\n\nComparative Fit Index (CFI) = 0.968\nTucker-Lewis Index (TLI) = 0.921\nRMSEA = 0.060\nSRMR = 0.063\n\nOnly CFI meets the criteria given in the lecture slides for \"considered good\". \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(burnoutfit, fit.measures = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.16 ended normally after 28 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        11\n\n  Number of observations                           100\n\nModel Test User Model:\n                                                      \n  Test statistic                                 5.458\n  Degrees of freedom                                 4\n  P-value (Chi-square)                           0.243\n\nModel Test Baseline Model:\n\n  Test statistic                                56.068\n  Degrees of freedom                                10\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.968\n  Tucker-Lewis Index (TLI)                       0.921\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -1836.113\n  Loglikelihood unrestricted model (H1)      -1833.384\n                                                      \n  Akaike (AIC)                                3694.226\n  Bayesian (BIC)                              3722.883\n  Sample-size adjusted Bayesian (SABIC)       3688.142\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.060\n  90 Percent confidence interval - lower         0.000\n  90 Percent confidence interval - upper         0.172\n  P-value H_0: RMSEA <= 0.050                    0.361\n  P-value H_0: RMSEA >= 0.080                    0.475\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.063\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  worksat ~                                           \n    hp                0.420    0.088    4.769    0.000\n  burnout ~                                           \n    worksat          -0.207    0.063   -3.304    0.001\n    conflict         -0.147    0.191   -0.772    0.440\n  conflict ~                                          \n    op                0.095    0.038    2.476    0.013\n    hp               -0.010    0.033   -0.308    0.758\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  hp ~~                                               \n    op               61.628   18.529    3.326    0.001\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .worksat         155.762   22.028    7.071    0.000\n   .burnout          75.347   10.656    7.071    0.000\n   .conflict         19.465    2.753    7.071    0.000\n    hp              200.614   28.371    7.071    0.000\n    op              152.210   21.526    7.071    0.000\n```\n:::\n:::\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n\n\n<div class='question-begin'>Question Extra: modification indices</div><div class='question-body'>\n\n\nExamine the modification indices of the model (use the `modindices()` function).   \nPay close attention to the `mi` column (this is the \"modification index\", which is the change in the $\\chi^2$ statistic).\nThe other interesting column is going to be the `sepc.all` column, which is the estimated parameter value of the proposed path, in a model where all the variables are standardised. This means we can evaluate whether the estimated parameter is relatively small/moderate/large, because these are all standardised correlations between -1 and 1!  \n\nAre there any paths which the modification indices suggest might improve the model? Do they make theoretical sense to include them?  \n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-9' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-9', 'sol-start-9')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-9\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmodindices(burnoutfit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        lhs op      rhs    mi     epc sepc.lv sepc.all sepc.nox\n12  worksat ~~  burnout 0.268 -13.039 -13.039   -0.120   -0.120\n13  worksat ~~ conflict 0.842  -5.053  -5.053   -0.092   -0.092\n15  worksat ~~       op 1.102 -15.122 -15.122   -0.098   -0.098\n16  burnout ~~ conflict 3.461 -28.991 -28.991   -0.757   -0.757\n17  burnout ~~       hp 0.036  -2.403  -2.403   -0.020   -0.020\n18  burnout ~~       op 3.185  18.424  18.424    0.172    0.172\n21  worksat  ~  burnout 0.095  -0.101  -0.101   -0.067   -0.067\n22  worksat  ~ conflict 1.306  -0.314  -0.314   -0.103   -0.103\n23  worksat  ~       op 1.102  -0.113  -0.113   -0.101   -0.101\n24  burnout  ~       hp 0.268   0.035   0.035    0.054    0.054\n25  burnout  ~       op 3.471   0.137   0.137    0.184    0.184\n26 conflict  ~  worksat 0.842  -0.032  -0.032   -0.099   -0.099\n27 conflict  ~  burnout 0.225  -0.062  -0.062   -0.126   -0.126\n28       hp  ~  worksat 1.102   0.316   0.316    0.309    0.309\n29       hp  ~  burnout 0.096  -0.051  -0.051   -0.033   -0.033\n32       op  ~  worksat 1.102  -0.097  -0.097   -0.109   -0.109\n33       op  ~  burnout 4.058   0.264   0.264    0.196    0.196\n```\n:::\n:::\n\n\nThere seems to be a suggested reasonably large correlation between `burnout` and `conflict`. \nIf we were to fit this model, our fit indices may well improve and meet our cut-offs. But this may well just be overfitting.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nburnoutmod2 <- \"\nworksat ~ hp\nburnout ~ worksat + conflict\nconflict ~ op + hp\nhp ~~ op\nburnout ~~ conflict\n\"\nsem(burnoutmod2, data=burnout)\n```\n:::\n\nWe will not start adjusting models based on modification indices today (or indeed in this course at all). __As a general rule for dapR3 course, we want you to specify and test a specific model, and not seek to use exploratory modifications.__  \n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class=\"tocify-extend-page\" data-unique=\"tocify-extend-page\" style=\"height: 0;\"></div>",
    "supporting": [
      "07_path1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/panelset-0.2.6/panelset.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/panelset-0.2.6/panelset.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}