{
  "hash": "b1a3696b47e896bab36504e4c599b361",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"example slides\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n# Course Overview\n\n\n\n<table style=\"border: 1px solid black;>\n  <tr style=\"padding: 0 1em 0 1em;\">\n    <td rowspan=\"5\" style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:1;text-align:center;vertical-align: middle\">\n        <b>multilevel modelling<br>working with group structured data</b></td>\n    <td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:1\">\n        regression refresher</td>\n  </tr>\n  <tr><td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:1\">\n        introducing multilevel models</td></tr>\n  <tr><td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:1\">\n        more complex groupings</td></tr>\n  <tr><td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:1\">\n        centering, assumptions, and diagnostics</td></tr>\n  <tr><td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:1\">\n        recap</td></tr>\n\n  <tr style=\"padding: 0 1em 0 1em;\">\n    <td rowspan=\"5\" style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:1;text-align:center;vertical-align: middle\">\n        <b>factor analysis<br>working with multi-item measures</b></td>\n    <td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:1\">\n        <b>what is a psychometric test?</b></td>\n  </tr>\n  <tr><td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:0.4\">\n        using composite scores to simplify data (PCA)</td></tr>\n  <tr><td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:0.4\">\n        uncovering underlying constructs (EFA)</td></tr>\n  <tr><td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:0.4\">\n        more EFA</td></tr>\n  <tr><td style=\"border: 1px solid black;padding: 0 1em 0 1em;opacity:0.4\">\n        recap</td></tr>\n</table>\n\n\n\n# This week {transition=\"slide\"}\n\n- section1\n    - subsection 1a\n    - subsection 1b\n    - subsection 1c\n- section2\n    - subsection 2a\n    - subsection 2b\n    - subsection 2c\n\n\n# SECTION\n\n## my slide\n\n## my next slide\n\n## my next slide {visibility=\"uncounted\"}\n\nthis isn't counted\n\n## my third slide {.incremental}\n\n- thing1\n\n- thing2\n\n- thing3\n\n## my fourth slide {.smaller}\n\n- small things\n\n- small things\n\n- small things\n\n## my fifth slide\n\n\n::::{.columns}\n:::{.column width=\"50%\"}\ncolumn 1  blahblahblah\n:::\n\n:::{.column width=\"50%\"}\ncolumn 2  blahblahblah\n:::\n::::\n\n\n## my sixth slide\n\nthis is some stuff\n\n:::{.fragment}\n\nOh wow, this stuff all arrives as a fragment!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# some R code\n```\n:::\n\n\n\n:::\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}