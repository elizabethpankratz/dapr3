---
title: "Random Effect Structures & Model Building"
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(patchwork)
library(lme4)
source('_theme/theme_quarto.R')
```

# Course Overview


# Course Overview

```{r}
#| results: "asis"
block1_name = "multilevel modelling<br>working with group structured data"
block1_lecs = c("regression refresher",
                "introducing multilevel models",
                "more complex groupings",
                "centering, assumptions, and diagnostics",
                "recap")
block2_name = "factor analysis<br>working with multi-item measures"
block2_lecs = c("reducing many variables to a smaller number of dimensions (PCA)",
                "identifying the underlying constructs that explain responses to a larger set of items (EFA)",
                "EFA 2",
                "CFA",
                "CFA 2")

source("https://raw.githubusercontent.com/uoepsy/junk/main/R/course_table.R")
course_table(block1_name,block2_name,block1_lecs,block2_lecs,week=1)
```

# This week {transition="slide"}

TODO
    
# Random Effect Structures

## Grouping structures so far... 


::::{.columns}
:::{.column width="50%"}

- children within schools

- people within areas

- trials within participants

- timepoint within participants

- nurses within hospitals

- and probably some others...

:::

:::{.column width="50%"}

:::
::::

## Look at your data! Read the study design!

::::{.columns}
:::{.column width="50%"}

**observations within clusters**  

when data is in long format:  

- rows of data grouped by values of group identifier `g`


:::

:::{.column width="50%"}

```{r}
#| echo: false
set.seed(245)
tibble::tibble(
  `g     ` = rep(1:6,e=3),
  `x     ` = round(runif(18,0,10)),
  y = round(rnorm(18,5,1),1)
) |> 
  rbind("...") |>
  dplyr::mutate(across(1:2,~paste0(.,"     "))) |>
  as.data.frame() |> 
  print(row.names=FALSE)
```



:::
::::

## Adding more levels!  

::::{.columns}
:::{.column width="50%"}

**observations within clusters _within higher clusters_**  

when data is in long format: 

- rows of data grouped by values of group identifier `g2`, which are in turn grouped by values of higher-level group identifier `g1`

:::

:::{.column width="50%"}

```{r}
#| echo: false
set.seed(245)
tibble::tibble(
  `g1    ` = rep(1:2,e=9),
  `g2    ` = rep(1:6,e=3),
  `x     ` = round(runif(18,0,10)),
  y = round(rnorm(18,5,1),1)
) |> 
  rbind("...") |>
  dplyr::mutate(across(1:3,~paste0(.,"     "))) |>
  as.data.frame() |> 
  print(row.names=FALSE)
```

:::
::::

## Adding more levels!  

::::{.columns}
:::{.column width="50%"}

**observations within clusters _and within some other clusters_**

when data is in long format: 

- rows of data grouped by values of group identifier `g`, but are also grouped by values of a group identifier `gg`

:::

:::{.column width="50%"}

```{r}
#| echo: false
set.seed(245)
tibble::tibble(
  `gg    ` = rep(1:3,6),
  `g     ` = rep(1:6,e=3),
  `x     ` = round(runif(18,0,10)),
  y = round(rnorm(18,5,1),1)
) |> 
  rbind("...") |>
  dplyr::mutate(across(1:3,~paste0(.,"     "))) |>
  as.data.frame() |> 
  print(row.names=FALSE)
```

:::
::::

## Nested Structures

- the things in a cluster belong __only__ to that cluster.  

```{r}
#| out-width: "450px"
#| echo: false
#| fig-align: "center"
knitr::include_graphics("https://media.gettyimages.com/id/657783001/photo/mallard-ducklings.jpg?s=2048x2048&w=gi&k=20&c=0kXqa1ss4W5kqSe5PsrK-2zy3UAkYbTnDLfqUckPzJ8=")
```

## Nested Structures {visibility="uncounted"}

- the things in a cluster belong __only__ to that cluster.  

```{r}
#| echo: false
#| fig-align: "center"
knitr::include_graphics("img_sandbox/structure_nestednew.png")
```

:::{.fragment .incremental}

- **`(1 | school) + (1 | class:school)`**

- **`(1 | school) + (1 | school:class)`**

- or **`(1 | school/class)`** as shorthand

:::

## Nested Structures - labels!  

- the things in a cluster belong __only__ to that cluster.  

```{r}
#| echo: false
#| fig-align: "center"
knitr::include_graphics("img_sandbox/structure_nestedlabnew.png")
```

- If labels are unique, `class:school` is the same as `class`, meaning that the two below are equivalent:  
    - **`(1 | school) + (1 | class:school)`**
    - **`(1 | school) + (1 | class)`**


## Example

::::{.columns}
:::{.column width="50%"}

One study site recruits 20 participants.  
Each participant has 10 datapoints.  

```{r}
d3 <- read_csv("https://uoepsy.github.io/data/dapr3_mindfuldecline.csv")
```
```{r}
#| echo: false
rbind(
  d3[1:4,],
  "...",
d3[d3$condition=="mindfulness",][1:4,]) |> as.data.frame() |>
  print(row.names=FALSE)
```
```{r}
#| eval: false
ggplot(d3, aes(x=visit, y=ACE))+
  geom_line(aes(group=ppt, col=condition), alpha=.7)
```

:::

:::{.column width="50%"}
```{r}
#| eval: false
... + (1 + ... | ppt)
```

```{r}
#| echo: false
d3 <- read_csv("https://uoepsy.github.io/data/dapr3_mindfuldecline.csv")
ggplot(d3, aes(x=visit, y=ACE))+
  geom_line(aes(group=ppt, col=condition), alpha=.7)+
  theme(legend.position = "bottom")
```

:::
::::

## Nested Example


::::{.columns}
:::{.column width="50%"}
14 study sites each recruit between 15-30 participants.  
Each participant has 10 datapoints.  

```{r}
d3full <- read_csv("https://uoepsy.github.io/data/dapr3_mindfuldeclineFULL.csv")
```
```{r}
#| echo: false
rbind(
  d3full[338:343,],
  "...",
  "...",
  d3full[956:959,],
  "..."
) |> as.data.frame() |> print(row.names=FALSE)
```
```{r}
#| eval: false
ggplot(d3full, aes(x=visit, y=ACE))+
  geom_line(aes(group=ppt, col=condition), alpha=.7) +
  facet_wrap(~sitename)
```

:::

:::{.column width="50%"}

```{r}
#| eval: false
... + (1 + ... | sitename) + (1 + ... | ppt:sitename)
```

```{r}
#| echo: false
ggplot(d3full, aes(x=visit, y=ACE))+
  geom_line(aes(group=ppt, col=condition), alpha=.7) +
  facet_wrap(~sitename)+
  theme(legend.position = "bottom")
```

:::
::::


## Crossed Structures

- "crossed" = not nested!

```{r}
#| echo: false
#| fig-align: "center"
knitr::include_graphics("img_sandbox/structure_crossednew.png")
```

:::{.fragment}

- **`(1 | subject) + (1 | task)`**  


:::

## Random Effects Revisited {.smaller}

**What do we mean by "random effects"?**  

$$
\text{... + }\underbrace{\text{(random intercept + random slopes | grouping structure)}}_{\text{random effects}}
$$


::::{.columns}
:::{.column width="50%"}

People use different phrasings...   

- when referring to random slopes:
  - "random effects of x for g"  
  - "random effects of x by g"  
  - "by-g random effects of x"  
- when referring to random intercept:
  - "random effect for g"
  
common definition: "allow ___ to vary by g"

:::

:::{.column width="50%"}

__Nested__  
```
... + (1 + ... | g1 ) + (1 + ... | g2:g1)
```

__Crossed__  
```
... + (1 + ... | g1 ) + (1 + ... | g2)
```

:::
::::

## Random Effects Revisited (2) {.smaller}

**Should variable `g` be fixed or random?**  

| Criterion: | Repetition: <br> _If the experiment were repeated:_ | Desired inference: <br> _The conclusions refer to:_ | 
|----------------|--------------------------------------------------|----------------------------------------------------|
| Fixed<br>**y ~ ... + g**  | Same groups would be used   |    The groups used  |
| Random<br>**y ~ ... + (...&#124;g)** | Different groups would be used   | A population from which the groups used are just a (random) sample |


- If only small number of groups, estimating variance components may be unstable.  

- Partialling out group-differences as fixed effects *may* be preferable. 


## Random Effects Revisited (3) {.smaller}

**I have  `y ~ 1 + x + (1 | g)` should I include by-g random slope of x?**  

If the effect of x can vary by g, then including `x | g` will give a better estimate of the uncertainty in the fixed effect of x.  


::::{.columns}
:::{.column width="50%"}

```
1. ACE ~ visit + (1 + visit | ppt)
2. ACE ~ visit + (1 | ppt)
```

1 is preferable to 2, especially because we're interested in estimating and testing the effect of visit.  


:::
:::{.column width="50%"}


```
3. ACE ~ visit + covariate + (1 + visit + covariate | ppt)
4. ACE ~ visit + covariate + (1 + visit | ppt)
```

3 is preferable to 4 because it more accurately represents the world (people vary in how the covariate influences cognition). But it's less crucial here - we're not interested in assessing significance of covariate, we're just controlling for it. 

:::
::::

## Random Effects Revisited (4) {.smaller}

::::{.columns}
:::{.column width="50%"}
```{r}
d3 <- read_csv("https://uoepsy.github.io/data/dapr3_mindfuldecline.csv")
ggplot(d3, aes(x=visit,y=ACE,col=condition))+
  geom_point()+
  facet_wrap(~ppt)
```
:::

:::{.column width="50%" .incremental}

- multiple observations from each participant  
`(1 | ppt)` theoretically makes sense  
(participants may vary in their average cognition)

- for a single ppt, the slope of `ACE ~ visit` exists in our study design.  
therefore, this *could* be different for different ppts!  
`(visit | ppt)` makes theoretical sense.

- for a single ppt, the slope of `ACE ~ condition` does not exist in our study design (each ppt is either one condition or the other).  
~~`(condition | ppt)`~~ makes no sense

:::
::::

## Random Effects Extended {.smaller}

::::{.columns}
:::{.column width="50%"}

```{r}
d3full <- read_csv("https://uoepsy.github.io/data/dapr3_mindfuldeclineFULL.csv")
ggplot(d3full, aes(x=visit, y=ACE))+
  geom_line(aes(group=ppt, col=condition), alpha=.7) +
  facet_wrap(~sitename)
```

:::

:::{.column width="50%" .incremental}

- multiple observations from each participant:  
`(1 | ppt)`

- multiple participants nested within study sites:  
`(1 | sitename) + (1 | ppt:sitename)`

- for a single ppt, the slope of `ACE ~ visit` exists in our study design:  
`(visit | ppt)`
- for a single study site, the slope of `ACE ~ visit` exists in our study design:  
`(visit | sitename)`

- for a single ppt, the slope of `ACE ~ condition` does not exist in our study design:  
~~`(condition | ppt)`~~
- for a single study site, the slope of `ACE ~ condition` exists in our study design:  
`(condition | sitename)`

:::
::::


## Random Effects Extended (2) {.smaller}


::::{.columns}
:::{.column width="50%"}
```{r}
d3full <- read_csv("https://uoepsy.github.io/data/dapr3_mindfuldeclineFULL.csv")
ggplot(d3full, aes(x=visit, y=ACE))+
  geom_line(aes(group=ppt, col=condition), alpha=.7) +
  facet_wrap(~sitename)
```
:::

:::{.column width="50%"}

`(1 | sitename) + (1 | ppt:sitename)`  
`visit | ppt`  
`visit | sitename`  
~~`condition | ppt`~~  
`condition | sitename`  


```
... + (1 + visit + condition | sitename ) + 
      (1 + visit | ppt:sitename)
```

:::
::::

## The poke in the eye {.smaller}

- Sometimes a model is too complex to be supported by the data

- Balancing act between simplifying our model while preserving attribution of variance to various sources  


::::{.columns}
:::{.column width="50%"}
**Accurately representing the world**  

everything that can vary is modelled as varying

:::

:::{.column width="50%" .incremental}
**Being able to fit the model**  

Get used to seeing lots of errors and warnings:  

<br>

Convergence Warnings:  
```
warning(s): Model failed to converge with max|grad| = 0.041777 (tol = 0.002, component 1) (and others)
```
<br>
Singular Fits:  
```
message(s): boundary (singular) fit: see help('isSingular')
```

:::
::::

## The poke in the eye {.smaller} 

- Sometimes a model is too complex to be supported by the data

- Balancing act between simplifying our model while preserving attribution of variance to various sources  


::::{.columns}
:::{.column width="50%"}
**Accurately representing the world**  

everything that can vary is modelled as varying

:::

:::{.column width="50%" .incremental}
**Being able to fit the model**  

in our sample, some things will not vary _enough_ to fit `x|g`  

- not enough groups in `g`
  - fit `+g` instead of `(1|g)`
- predictors on different scales
  - `mm|g` vs `km|g`
      - can be fixed with scaling  
- not enough variance in `y~x` between groups
- model estimation hitting boundaries  
    - variance $\nleqq 0$
    - correlations $\ngeqq 1$ and $\nleqq -1$  
  
:::
::::




# Model Building


## Model Estimation

- For standard linear models, we can calculate the parameters using a *closed form solution*.


- Multilevel models are too complicated, we *estimate* all the parameters using an iterative procedure like Maximum Likelihood Estimation (MLE).

## Model Estimation: ML

Aim: find the values for the unknown parameters that maximize the probability of obtaining the observed data.  
How: This is done via finding values for the parameters that maximize the (log) likelihood function.

```{r echo=FALSE, out.height="450px"}
knitr::include_graphics("img_sandbox/1stderiv.png")
```

## Model Estimation: (log)Likelihood

- Data = multiple observations: $1, ..., n$ 

- From our axioms of probability, we can combine these *i.i.d* by multiplication to get the likelihood of our parameters given our entire sample

- Instead of taking the **product** of the individual likelihoods, we can take the **summation** of the log-likelihoods
    - This is considerably easier to do, and can be achieved because multiplication is addition on a log scale.

## Model Estimation: ML

In multilevel models, our parameter space is more complex (e.g. both fixed effects and variance components).

```{r echo=FALSE, out.height="450px"}
knitr::include_graphics("img_sandbox/multisurftb.png")
```

## Model Estimation: ML vs REML


::::{.columns}
:::{.column width="50%"}
__Maximum Likelihood__  

The standard MLE procedure for multilevel models treats the fixed effects as _known_ when estimating the variance components at each iteration.  

This can lead to biased estimates of variance components (esp. for small samples).

:::

:::{.column width="50%"}
__Restricted Maximum Likelihood (REML)__

REML is the default in `lmer()` and separates the estimation of the fixed and random parts. it estimates the variance components _first_.  

This leads to less biased estimates of the variance components. Better for small samples (and will converge with ML with $n \rightarrow \infty$). 
:::
::::


```{r echo=FALSE, fig.align='center'}
knitr::include_graphics("img_sandbox/mlreml.png")
``` 
  
(Image from from McNeish 2017: https://doi.org/10.1080/00273171.2017.1344538 )


## Maximal Structures

"maximal model" = the most complex random effect structure that you can fit to the data

  - everything that _can_ be modelled as a random effect, is done so

- requires sufficient variance at all levels (for both intercepts and slopes where relevant). Which is often not the case.  


::::{.columns}
:::{.column width="50%"}
Simple(ish) design:  
20 participants, each with approx 10 observations  
```{r}
#| echo: true
d3 <- read_csv("https://uoepsy.github.io/data/dapr3_mindfuldecline.csv")
maxmodel <- lmer(ACE ~ visit * condition + 
                   (1 + visit | ppt), 
                 data = d3)
```

```{r}
#| echo: true
isSingular(maxmodel)
```
:::

:::{.column width="50%"}
Complicated design:  
14 Study sites, each with c18 ppts, each with approx 10 observations
```{r}
#| echo: true
d3full <- read_csv("https://uoepsy.github.io/data/dapr3_mindfuldeclineFULL.csv")
maxmodelfull <- lmer(ACE ~ visit * condition + 
                   (1 + visit * condition | sitename) +
                   (1 + visit | sitename:ppt), 
                 data = d3full)
```
```
# boundary (singular) fit: see help('isSingular')
```
```{r}
#| echo: true
isSingular(maxmodelfull)
```
:::
::::

## Model Estimation  

**Don't report results from a model that doesn't converge. You will probably not be able to trust the estimates.**   

- Check model specification! Do your random effects make sense?  


::::{.columns}
:::{.column width="50%"}

- Try a different optimiser, adjust the max iterations, or the stopping tolerances  

- Try **all** optimisers at once! `summary(allFit(model))`
  - look for the 'messages'
  - for those optimisers that successfully converge, compare estimates.  
  
*This probably won't help. In most cases, it is just that our model is too complex to fit to our available data.*

:::

:::{.column width="50%"}

```{r echo=FALSE, fig.asp=.3}
knitr::include_graphics("img_sandbox/tolerance.png")
```

:::
::::

